window.onload = function () {    
   //클래스와 생성자 : 생성자는 새로 생성된 객체를 초기화하는 용도로 사용되는 함수다. 생성자는 new 키워드를 사용하여 호출된다. 생성자를 호출하면 자동으로 새로운 객체가
   //생성되고 생성자 함수 내부에서 새로 생성된 객체를 사용하기 때문에, 생성자 함수는 새 객체의 상태를 초기화하는 데만 신경 쓰면 된다. 생성자 호출의 핵심적인 특징은 생성자의
   //prototype프로퍼티가 새 객체의 프로토타입으로 사용된다는 것이다. 이는 한 생성자를 통해 생성된 모든 객체는 같은 객체를 상속하고 따라서 같은 클래스의 멤버임을 뜻한다.
   //이 함수는 새 Range 객체를 초기화하는 생성자 함수다.
   //이 함수는 어떤 객체도 내부에서 생성하고 반환하지 않는다 단지 this를 초기화할 뿐이다. 
   function Range(from, to)
   {
      //이 Range 객체의 시작과 끝을 (객체의 상태로)저장한다. 이 프로퍼티들은 해당 객체의 고유한 값이고 상속되지 않는다. 
      this.from = from;
      this.to = to;
   }
   //모든 Range 객체는 이 객체를 상속한다. 모든 객체가 이 객체를 상속하려면 프로퍼티 이름은 반드시 prototype이어야 한다. 
   Range.prototype = {
      //x값이 범위 내에 있다면 true를 그렇지 않으면 false를 반환한다. 이 메서드는 텍스트 범위 및 날짜 범위에 대해서도 숫자 범위와 마찬가지로 작동한다. 
      includes: function(x) { return this.from <= x && x <= this.to;},
      //범위 내의 각 정수에 대해 f를 한번씩 호출한다. 이 메서드는 숫자 범위에 대해서만 작동한다. 
      foreach:function(f){
         for(var x=Math.ceil(this.from); x <= this.to; x++)f(x);
      },
      //범위를 표현하는 문자열을 반환한다. 
      toString: function(){ return "(" + this.from + "..." + this.to + ")"}
   };
   //Range 객체를 사용하는 몇가지 예제
   var r = new Range(1,3); //Range 객체를 생성한다
   r.includes(2); // true : 2가 범위에 있다.
   r.foreach(console.log); //1 2 3을 출력한다
   console.log(r); // (1...3)을 출력

   //먼저 range()팩터리 함수는 생성자로 변경되면서 이름이Range()로 바뀌었다. 클래스와 생성자 함수의 이름을 대문자로 시작하는 것은 매우 일반적인 코딩 규칙이다. 일반 함수와
   //메서드는 소문자로 이름을 시작한다.  다음으로 range()팩터리 함수가 일반 함수처럼 호출되는 반면에 Range()생성자는 new 키워드를 사용하여 호출된다 Range()생성자는 new 
   //키워드를 사용하여 호출되기 때문에 inherit()을 호출하거나 새 객체를 생성하기 위한 어떤 별도의 행동도 할 필요가 없다. 새 객체는 생성자 함수가 실행되기 전에 자동으로
   //생성되고 생성자 함수 내에서 this값으로 접근할수 있다. Range()생성자는 그 저 새 객체를 초기화하기만 하면 되고 생성된 객체를 반환할 필요도없다. 생성자를 호출하면 새
   //객체는 자동으로 생성되고 새 객체의 메서드로서 생성자 함수가 호출된 다음 초기화가 완료된 새 객체가 반환된다. 생성자 호출이 일반적 하나의 이유다. 생성자는 new 키워드를
   //사용하여 호출된다고 가정하기 때문에 일반적인 함수 호출처럼 호출하면 보통 제대로 작동하지 않는다. 일반적인 함수와 구분되도록 작명 규칙을 지키는 것은 다른 프로그래머가
   //언제 new 를 사용해야 하는지를 알게 하는데 도움이 된다. Range()생성자를 호출하면 자동으로 Range.prototype이 새로 생성된 Range객체의 프로토타입으로 지정된다. 
}