CHAPTER13 : 맵킷 프레임워크 사용하기
iOS 기반의 기기를 구매해본 경험이 있는 분들이라면 대부분 알고 있겠지만 전화나 메일, 사파리 브라우저, 계산기, 카메라, 주소록, 지도 등의 몇몇 애플리케이션은 따로 설치하지 않아도 이미 설치되어 있는 상태로 제공됩니다. iOS 자체에 포함되어 있기 때문이죠. 이렇게 OS에 함께 포함된 애플리케이션들을 번들 프로그램(Bundle Program), 또는 번들 애플리케이션(Bundle Application)이라고 부릅니다. 

종종 번들 프로그램의 기능을 커스텀 앱 내부에서 제공해야 할 필요가 생기기도 합니다. 가령 사진을 찍어서 그 데이터를 개인 프로필로 올려야 한다고 생각해 봅시다. 앱 내부에서 카메라가 지원되지 않는다면 우리는 기존 앱을 내리고, 카메라 앱을 구동한 다음 사진으로 찍히면 이를 다시 기존 앱에서 찾아 올려야 합니다. 또다른 경우로 , 카카오톡이나 라인과 같은 SNS 메신저 계열의 앱은 개인 주소록을 읽어 친구를 추천하고 등록하는 기능을 하지만, 만약 앱 내부에서 개인 주소록을 읽을수 없다면 우리는 주소록 앱을 실행하여 데이터를 파일로 저장하고, 이를 SNS 메신저에 업로드하는 식으로 처리해야 할 것입니다. 

이같은 기능을 별도의 앱으로 제공하는 것은 사용자를 매우 불편하게 만드는 일입니다. 따라서 커스텀 앱에서 벗어나지 않고 내부에서 사용할수 있는 방법이 궁리되어야 하죠. 하지만 이것을 직접 구현하려면 개발의 복잡함이 상당합니다. 카메라를 직접 다루기 위해서는 하드웨어의 스펙을 알아야 할 뿐만 아니라 어떤 신호를 어떻게 주어야 하는지, 카메라 데이터는 어떤 식으로 처리해야 하는지 등등을 일일이 파악해야 하기 때문입니다. 

이런 일들을 막으면서 동시에 사용자들의 편의를 높이기 위해 애플에서는 번들 어플리케이션을 앱 내부에서 사용할수 있는 방법을 프레임워크 형식으로 제공합니다. 이를 이용하면 단지 서너줄의 코드만으로 손쉽게 인앱 카메라 인터페이스를 사용할수 있을 뿐만 아니라 개인 주소록 정보를 사용자의 동의에 의해 특정 앱에 제공할수도 있습니다. 

이처럼 번들 프로그램을 앱 내부에서 사용하여 기능을 손쉽게 확장할수 있도록 제공하는 별도의 프레임워크를 인앱 프레임워크(In-App Framework)라고 합니다. 앱 내부에서 외부 앱 기능을 사용할수 있도록 지원하는 프레임워크라는 뜻입니다. 앱 개발에 있어 인앱 프레임워크는 다양한 기능을 가진 앱을 손쉽게 제작할수 있도록 돕는 매우 중요한 역할을 합니다. 



13.1 인앱 프레임워크의 종류
인앱 프레임워크는 대부분 코코아 터치 프레임워크에 포함되어 있으며, 각 프레임워크의 성격에 맞추어 iOS의 계층 구조에 적절히 나누어져 있습니다. iOS의 계층 구조와 그에 포함된 인앱 프레임워크들은 다음과 같습니다. 

이 중에서 가장 핫한 계층은 최상휘에 있는 코코아 터치 계층(Cocoa Touch Layer)입니다. 우리가 코코아 터치 프레임워크라고 부르는 곳 말이죠. 이 계층은 iOS 애플리케이션을 개발하기 위한 각종 핵심 프레임워크가 포함된 계층으로, 우리가 사용하는 뷰 컨트롤러나 뷰같은 주요 화면 객체들을 정의하는 UIKit 프레임워크가 이 계층에 포함되어 있습니다. 

코코아 터치 계층은 멀티태스킹 처리나 화면 터치에 대한 처리 등과 같은 핵심 기술들도 지원할뿐만 아니라, 번들 애플리케이션을 인앱 인터페이스로 활용하기 위해 필요한 주요 프레임워크까지 제공하고 있습니다. 코코아 터치 계층에 포함된 인앱 프레임워크에는 다음과같은 것들이 있습니다. 



※ 주소록 UI 프레임워크 - Address Book UI Framework
주소록 UI 프레임워크는 시스템에서 제공하는 주소록의 인터페이스를 사용할수 있도록 지원합니다. 이 프레임워크를 사용하면 앱 내부에서 바로 주소록 화면을 열고 데이터를 불러오거나 편집하는 등의 작업을 처리할수 있습니다. 



※ 이벤트 및 일정 관련 프레임워크 - Event Kit UI Framework
이벤트 킷 UI 프레임워크는 시스템에 등록되어 있거나 애플 계정으로 연동된 일정 및 스케줄 정보를 달력 형태로 표현해주는 뷰 컨트롤러를 제공합니다. 이벤트 킷 UI 프레임워크를 사용하면 앱 내부에서 시스템에 등록된 일정을 확인하고 편집할수 있습니다. 



※ 메시지 UI 프레임워크 - Message UI Framework
메시지 UI 프레임워크는 사용자 메일 박스의 기능을 사용할수 있도록 지원하는 프레임워크입니다. 이 프레임워크를 이용하면 앱 내부에서 간단하게 이메일을 작성하고 전송할수 있는 화면을 구성할수 있습니다. 



※ 광고 관련 프레임워크 - iAd Framework
아이애드 프레임워크는 애플리케이션에 배너 광고를 손쉽게 삽입할수 있도록 지원해주는 프레임워크입니다. 별도의 수익 모델이 없는 앱이라 해도 아이애드 프레임워크를 사용하면 사용자의 광고 클릭 여부에 따라 광고 수익을 얻을수 있습니다. 




※ 게임 킷 프레임워크 - Game Kit Framework
게임 킷 프레임워크는 애플에서 제공하는 게임 센터를 이용하여 게임 사용자들을 서로 이어줄수 있도록 지원해줍니다. 이를 통해 익명의 온라인 사용자들이 서로 대전하는 환경을 손쉽게 구축할 수 있습니다. 또한 이 프레임워크는 블루투스 연결이나 무선 네트워크 연결을 통해 같은 지역에 있는 사용자들끼리 애플리케이션에서 P2P 연결을 할수 있는 기능을 제공합니다. 즉 근거리에서는 서버를 경우하지 않는 클라이언트 간 연결성 게임을 구성할수 있는 거죠. 



※ 지도 관련 프레임워크 - Map Kit Framework
맵킷 프레임워크는 애플에서 제공하는 지도에 관련된 기능을 사용할수 있도록 지원하는 프레임워크입니다. 특별히 기능을 구현해주지 않아도 맵킷 프레임워크는 사용자의 터치를 인식하고 자동으로 확대, 축소 또는 이동하는 등의 기능을 기본으로 제공해주는데 특히 위치 기반 서비스의 증가와 함께 중요한 요소로 취급되고 있는 프레임워크이기도 합니다. 우리가 이번 장에서 실습해볼 프레임워크가 바로 맵킷 프레임워크입니다. 





13.2 맵킷 프레임워크 추가
맵킷 프레임워크를 활용하여 앱에 지도 기능을 추가해 봅시다 MyMovieChart 앱에서 영화관 목록을 클릭하면 해당 영화관이 있는 곳을 지도에서 보여주는 거죠. 위도에 위치를 표현하기 위해서는 물체의 좌표값이 필요한데 우리가 전달받은 영화관 정보 데이터를 살펴보면 위도와 경도가 포함되어 있습니다. 이를 이용하여 지도에 위치를 표시하겠습니다. 

지도 기능을 사용하려면 우선 맵킷 프레임워크를 프로젝트 설정에서 추가해야 합니다. 인앱 프레임워크를 사용하기 위한 필수 과정이죠. 비단 인앱 프레임워크뿐만 아니라 지금까지 계속 사용한 UIKit과 Foundation 프레임워크도 마찬가지입니다. 사용할 객체가 포함되어 있는 프레임워크를 항상 추가한 다음에 사용해야 합니다. 

우리가 지금까지의 실습에서 이들 프레임워크를 추가하지 않고도 사용할수 있었던 것은 이 두개의 프레임워크는 iOS 애플리케이션 프로젝트를 생성할 때 기본으로 추가되어 있었기 때문입니다. 단순히 우리가 신경쓸 필요가 없도록 자동으로 처리되어 있었던 것이지. 추가하지 않고 사용해도 되는 것은 아닙니다. 


참고 : 프로젝트에 인앱 프레임워크를 추가하기
최근의 Xcode를 바탕으로 생성한 프로젝트에서는 인앱 프레임워크를 사용하기 위한 과정이 다소 완화되었습니다. 인앱 프레임워크를 프로젝트 설정에서 추가하지 않고도 import 구문만을 이용하여 반입이 가능하도록 지원되기 때문입니다. 

하지만 이는 애플 개발 지침에서 공식적으로 제공하는 것이 아니며 여전히 공식적으로는 프로젝트 설정에서 프레임워크를 직접 추가한 후 사용하도록 정의되어 있습니다. 따라서 프로젝트 설정에서 프레임워크를 추가하지 않고 사용할 경우 Xcode의 버전에 따라 오류가 발생하지 않는다고 장담할수 없습니다.(필자도 알지 못하는 미래의 어느 버전에선가 프레임워크에 관련된 오류가 발생할 수도 있다는 뜻입니다.)따라서 우리는 안전성 있는 프로젝트를 위해 인앱 프레임워크를 프로젝트에 추가한 후 사용하는 습관을 들이는 것이 좋습니다.



맵킷 프레임워크를 프로젝트에 추가해 봅시다. 여러분이 다른 프레임워크를 사용할 때도 같은 과정을 거쳐야 하므로 잘 학습해두기 바랍니다. 



STEP1 : Xcode의 프로젝트 내비게이션에서 프로젝트명을 클릭하여 프로젝트 설정 화면을 실행 합니다. 


STEP2 : [General]탭의 설정 정보 중 가장 아래에 있는 [Linked Frameworks and Libraries]항목을 찾아 아래에 있는[+]아이콘을 클릭합니다. 


STEP3 : 프레임워크 선택창이 나타나면 상단 검색란에 MapKit을 입력하고 검색합니다. 


STEP4 : 검색 결과 중에서 MapKit.framework 혹은 이와 유사한 이름의 항목이 나타나면 이를 선택하고 창 하단의 <Add>버튼을 클릭합니다 

[Linked Frameworks and Libraries]항목에 추가된 프레임워크 목록이 표시됩니다. 이제 프로젝트 내에서 맵킷 프레임워크에 관련된 API를 사용할수 있습니다. 

인앱 프레임워크를 프로젝트에 추가하는 과정이 불편하게 느껴진다면 아래 두 번째 방법을 사용해서 추가할수도 있습니다. 두 번째 방법이 첫 번째 방법보다 조금 더 간편하지만 결과는 동일합니다. 

STEP1 : 프로젝트 설정 정보 화면에서 [Capabilities]탭을 클릭해서 엽니다. 

STEP2 : [Maps]항목을 찾아 설정값을<On>으로 전환합니다. 


STEP3 : MapKitFramework가 프로젝트에 추가되었습니다. 