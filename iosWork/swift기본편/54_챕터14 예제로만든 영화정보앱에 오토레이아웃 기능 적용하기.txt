14.2 MyMovieChart 프로젝트에 오토 레이아웃 적용하기
앞에서 우리는 디바이스별 화면 크기에 대응할수 있도록 오토레이아웃을 적용하는 방법을 학습했습니다. 이 내용을 바탕으로 MyMovieChart 프로젝트에도 오토 레이아웃을 적용해 보겠습니다.

사실 원칙적으로는 스토리보드 작업 초기부터 제약 조건을 추가해 가면서 레이아웃을 설정하는 것이 가장 좋습니다. 하지만 전제 조건이 있는데 제약 조건을 추가하는 것은 이미 어느 정도 화면 기획이 완성되어 전체적인 UI 레이아웃이 흔들리지 않을 상태이어야 합니다.(중간에 기획 요소가 바뀌어 기존의 레이아웃에서 상당 부분 변화가 있을 경우 이를 레이아웃이 흔들린다 라고 표현합니다)작업 과정 중간에 화면 구성이 바뀌면 최악의 경우 모든 제약 조건을 지우고 처음부터 다시 설정해야 하기 때문입니다. 때문에 UI가 변경될 가능성이 있다면 차라리 모든 작업을 마친 후 마지막으로 레이아웃 설정을 추가하는 편이 낫습니다. 

MyMovieChart 앱의 화면 하나하나를 기기별로 실행해보면서 문제가되는 부분을 찾아봅시다. 우선 각 화면을 부르기 쉽도록 이름을 붙이겠습니다. 

스토리보드에서 작업된 컨트롤러는 모두 일곱 개지만 그중에서 우리가 오토 레이아웃을 적용해야 할 화면은 모두 네 개 뿐입니다. 나머지 탭 바 컨트롤러 내비게이션 바 컨트롤러는 모두 자동으로 레이아웃 설정이 되어 있으므로 우리가 설정할 필요는 없습니다. 


14.2.1 영화 정보 화면
MyMovieChart 앱에서 실질적으로 첫 화면을 담당하는 영화 정보 화면은 테이블 뷰와 내비게이션 바, 그리고 탭 바로 구성되어 있습니다. 이 중에서 내비게이션 바와 탭 바는 건드릴 필요가 없으므로 건너뛰고 테이블 뷰에만 집중해서 제약조건을 설정하면 됩니다. 문제점을 확인하기 위해 화면을 각 기기에서 열어봅시다. 물론 가로 모드 점검도 잊지 말아야 겠군요. 

문제점1 : 가로 모드에서 평점 정보 오른쪽에 여백이 많이 발생하며 공간이 충분함에도 제목이 다 표시되지 않음

문제점2 : iPhone SE에서 평점 정보가 표시되지 않음. 오른쪽에 숨겨져 있음

문제점3 : 가로 모드에서 더보기 버튼이 중앙 정렬되지 않음

각 기기에서 실행해본 결과 대표적으로 문제가 되는 부분이 오른쪽 영역입니다. 특히 평점을 담당하는 레이블의 좌표가 화면의 오른쪽에 고정되어 있는 까닭에 화면 크기에 따라 가장 영향을 많이 받고 있죠. 문제점 1도, 문제점 2도 모두 같은 원인이라고 할 수 있습니다. 이를 해결하기 위해서는 평점 레이블이 화면 크기의 변화에 따라 유동적으로 움직일수 있도록 해주어야 합니다. 또 하나의 문제는 영화 제목입니다. 화면이 충분히 커졌음에도 레이블이 화면의 크기에 따라 늘어나지 않아 내용 전체를 출력하지 못하고 있습니다. 

평점 레이블은 텍스트의 길이가 거의 일정하므로 화면의 크기에 따라 늘어날 필요는 없습니다. 레이블의 오른쪽 간격만 고정되면 충분합니다. 반면에 제목 레이블은 화면의 크기에 따라 가로 길이가 늘어나야 합니다. 또다른 문제점인 더보기 버튼은 세로 모드나 가로 모드 뿐만 아니라 각각의 디바이스에서도 항상 가운데에 정렬되어 있어야 합니다. 이제 여기에 알맞은 제약 조건들을 추가하여 이 문제들을 해결해 봅시다. 

STEP1 : Main.storyboard를 열고 평점 레이블을 선택합니다. 

STEP2 : 평점 레이블을 우클릭하여 오른쪽으로 드래그하되 테이블 뷰 셀 전체가 푸른색 블록으로 선택되면 드래그를 멈춥니다. 

STEP3 : 드래그를 멈춘 위치에서 제약 조건들이 나열되면 [Trailing Space to ListCell]를 선택합니다. 

오른쪽 간격을 고정하는 제약 조건이 추가되면 다음과 같은 표시가 추가되면서 평점 레이블의 오른쪽 간격이 고정됩니다. 

STEP4 : 같은 방식으로 평점 레이블을 테이블 뷰 셀 내부의 아래, 또는 대각선 방향으로 드래그하여 메뉴 목록 중에서 [Bottom Space to ListCell]를 선택합니다. 

간혹 [Bottom Space to Container]메뉴가 표시되는 경우가 있는데, 이는 드래그한 영역이 Content View로 잡혀서 그런것이니 아래 그림처럼 대각선 방향으로 드래그하여 메뉴에서 [Bottom Space to ListCell]를 선택하면 됩니다. 하지만 둘 중 어느 것을 선택하더라도 설정결과는 크게 차이가 없습니다. 

STEP5 : 이번에는 Width와 Height를 설정하겠습니다. 평점 레이블을 그림과 같이 오른쪽으로 조금만 드래그하여 평점 레이블 내부에서 드래그를 멈춥니다. 

STEP6 : 이어서 제약 조건 팝업 메뉴가 나타나면 [Width]를 선택합니다. 

STEP7 : 같은 방식으로 평점 레이블에[Height]제약 조건도 추가합니다. 

중요한 것은 드래그하는 방향과 각도입니다. 오른쪽 수평으로 드래그하면 메뉴에 [Width]가 표시되지만 아래쪽 수직으로 드래그하면 메뉴에[Height]가 표시됩니다. 이를 활용하여 평점 레이블 위에서 아래 방향으로 드래그하여 [Height]를 선택합니다. 그런데 수평 방향으로 드래그하면 [Width], 수직 방향으로 드래그하면 [Height]라니 너무 애매하죠? 그래서 대각선으로 드래그할수도 있답니다. 평점 레이블을 벗어나지 않는 내에서 대각선으로 드래그하면 다음처럼 [Width]와 [Height]메뉴가 함께 나타납니다. 

이로써 평점 레이블에 필요한 모든 레이아웃 설정이 완료되었습니다. 필요한 제약 조건이 모두 추가된 평점 레이블의 레이아웃은 다음과 같습니다. 

사실 우리에게 필요한 것은 가장 처음에 설정한 [Trailing Space to ListCell]제약 조건뿐이지만 iOS가 명확하게 레이아웃 설정을 이해하기 위해서는 평점 레이블의 Y좌표 위치가 필요합니다. X좌표가[Tailing Space to ListCell]메뉴로 인해 결정되었으니 Y 좌표도 결정해달라는 것이죠. 이 떄문에 [Bottom Space to ListCell]조건이 추가되었습니다. 

[Width]와 [Height]는 굳이 설정하지 않아도 되는 항목이지만 평점이라는 텍스트가 실제로 차지하는 가로, 세로의 크기와 우리가 임의로 늘려놓은 레이블의 크기가 서로 다르므로 이에 대한 경고가 발생합니다. 따라서 우리가 직접 설정해놓은 크기가 맞으니 이상하게 생각하지 말아주셨으면 좋겠습니다. 하고 iOS에 알려주기 위한 목적으로 설정을 추가했습니다. 이렇게 네 개의 설정을 추가하고 나면 문서 개요창에 잠깐 표시되었던 오류 및 경고 표시는 모두 사라집니다. iOS가 레이아웃을 계산하기 위한 제약 조건이 충분하게 설정되었다는 것이죠. 

계속해서 영화 제목을 설정해 봅시다. 이번에는 핀 설정창을 이용하여 일괄로 제약 조건을 추가해 보겠습니다. 영화 제목 레이블을 선택하고 핀 설정창을 열어 다음과 같이 설정합니다. 

STEP1 : 왼쪽 간격 입력값 영역에서 역삼각형을 클릭하여 팝업창을 엽니다. Content View와 Thumbnail중에서 현재 Thumbnail로 선택되어 있을 텐데요. 이를 Content View로 바꿔줍니다. 

여기 목록에 나타나는 객체들은 모두 영화 제목 레이블의 왼쪽 간격을 고정할수 있는 대상들입니다. 우리는 필요에 따라 이미지 섬네일을 기준으로 제목 레이블의 간격을 정할 수도 있고, 그 보다 상위 객체인 콘텐츠 뷰를 대상으로 제목 레이블의 간격을 정할수도 있습니다. 섬네일의 사이즈가 데이터에 따라 달라진다면 섬네일을 기준으로 간격을 정하는 것이 현명합니다. 섬네일의 크기가 달라지더라도 지정한 간격만큼은 계속유지될 테니까요. 하지만 우리 앱에서는 섬네일 이미지가 고정된 크기를 가지기 때문에, 어느 쪽을 간격 기준으로 삼든지 큰 차이가 없습니다. 다만 섬네일을 간격 기준으로 삼을 경우 섬네일도 간격과 사이즈 등의 제약 조건을 추가해 주어야 하니 조금 귀찮기는 합니다. 그래서 콘텐츠 뷰를 기준으로 삼고 있습니다. 

기준을 콘텐츠 뷰로 변경하는 순간, 입력값의 수치가 변화합니다. 섬네일과의 간격을 제어 표시하고 있던 상태에서 콘텐츠 뷰와의 거리로 바꾸는 것이니만큼 간격값은 바뀌게 되죠. 필자의 경우를 예로 들면 섬네일로부터 7포인트 간격이었던 기준을 콘텐츠 뷰로부터 61 포인트 간격이 되도록 조건으로 변경하였습니다.


STEP2 : 오른쪽 간격 입력값 영역에서도 역삼각형을 클릭하여 팝업 창을 열고, 간격 기준을 Content View로 변경합니다. 

STEP3 : 상단 간격과 하단 간격을 모두 클릭하여 활성화하고 [Height]항목 역시 체크한 다음 맨 아래의 [Add 5 Constraints]를 클릭하여 제약 조건을 등록합니다. 모두 다섯 개의 제약 조건이 추가됩니다. 

영화 제목 레이블은 평점과 달리 화면 사이즈의 변화에 따라 가로 너비가 유동적이어야 합니다. 

이 때문에 너비를 고정하는 대신 레이블의 양쪽 간격을 고정하였습니다. 레이블의 양쪽 간격이 고정되면 화면의 가로가 늘었을 때 레이블도 따라서 늘어나고, 반대로 줄어들었을 때 레이블도 함께 줄어들게 될 테니까요. 레이블을 일종의 고무줄과 같은 성격으로 만들어 양쪽에서 잡아 당기는 것과 같은 원리라고 생각하면 됩니다. 

영화 레이블에 추가된 설정 내용을 정리해 봅시다. 

※ 좌우 측 간격 대상을 Content View로 설정
※ 상하좌우 간격을 모두 활성화
※ 높이 활성화

설정창을 이용하는 대신 직접 드래그하여 제약 조건을 추가할 때에는 주의해야합니다. 제목 레이블 바로 옆에는 이미지 뷰가 있어서 드래그하는 위치를 잘못 잡으면 이미지 뷰와의 간격을 설정하게 되기 때문입니다. 잘못된 것은 아니지만, 이렇게 되면 이미지 뷰의 레이아웃도 설정해야 하므로 영화 제목 레이블에 대한 제약 조건을 콘텐츠 뷰를 기준으로 잡도록 합니다. 


STEP4 : 영화 상세 레이블을 선택하고 핀 설정창을 열어 다음과 같이 제약 조건을 추가합니다. 

※ 좌측 간격 대상을 Content View로 변경(우측 간격 대상은 변경 안함)
※ 좌측 간격을 61로, 우측 간격을 18로 각각 설정
※ 높이값을 21로 설정

영화 상세 레이블은 원래 제약조건을 설정해주지 않아도 되지만, 위쪽에 있는 영화제목 레이블이 영화 상세 레이블에 대한 수직 간격을 설정함으로써 상세 레이블도 오토 레이아웃 설정 범위에 들어가 버리게 되었습니다. 다시 말해 영화 상세 레이블의 제약 조건까지 설정하지 않으면 영화 제목 레이블이 제 위치를 잡지 못한다는 뜻입니다. 이처럼 제약 조건을 추가할 때 주변 객체와의 간격을 설정하면 설정된 주변 객체도 모두 제약 조건을 설정해야 하는것에 주의하기 바랍니다. 

영화 상세 레이블의 제약 조건까지 설정하고 나면 오류 표시가 사라지면서 레이아웃이 안정화됩니다. 이제 실행해 봐도 되지만 아직 더보기 버튼의 중앙 정렬 문제가 남아있네요. 이 버튼의 중앙 정렬은 다시 드래그 방식을 사용해서 처리해 보겠습니다. 

STEP5 : 먼저 더보기 버튼을 선택합니다. 

STEP6 : 선택된 더보기 버튼을 대각선 아래로 드래그합니다. 

STEP7 : 수평이나 수직 중에서 어느 한 방향으로만 드래그했을 때와는 달리 여러 항목이 팝업 메뉴에 표시되는데 이 중에서 다음 항목들을 차례로 선택합니다. 한 번에 하나의 제약 조건만 추가할수 있으므로 드래그를 반복해야 합니다. 

※ [Bottom Space to Container]
※ [Center Horizontal in Container]

앞에서 실습해보지 않은 설정이 사용되었습니다. 바로 중앙 정렬 설정입니다. 이것은 더보기 버튼을 선택한 상태에서 [Editor] > [Align]메뉴 하위에서도 선택할수 있습니다. 

중앙 정렬에는 수평 중앙 정렬[Horizontal Center Align]과 수직 중앙 정렬[Vertical Center Align]이 있습니다. 수평 중앙 정렬은 좌우의 간격을 같게 유지해서 수평선상에서 가운데에 해당 객체를 정렬할수 있게 해주는 반면 수직 중앙 정렬은 위아래 간격을 같게 유지해서 수직선상에서 가운데에 해당 객체를 정렬할수 있게 해줍니다. 여기에서는 수평 중앙 정렬만 사용하였습니다. 

수평 중앙 정렬을 통해 X 좌표가 확정되었으므로 iOS에서는 이에 맞는 Y좌표도 요청합니다. 이 때문에 [Bottom Space to Container]설정을 추가하여 레이아웃을 보완하였습니다. 

STEP8 : 더보기 버튼 내부에서 내부로 드래그하여 Width 설정을 추가합니다. 

이것으로 영화 정보 화면의 레이아웃 설정이 완료되었습니다. 이제 실행해봅시다. 

가로 모드에서 평점 정보가 제 위치를 벗어나 있었던 것이 오른쪽에 제대로 자리를 잡고 있고, 영화 제목 역시공간이 넓어짐에 따라 충분한 공간을 차지하고 텍스트를 출력합니다. 왼쪽으로 쏠려있던 더보기 버튼 역시 가운데에 있네요. iPhone SE에서는 가려져서 보이지 않았던 평점 정보 역시 제대로 표시되고 있음을 알 수 있습니다. 독자 여러분도 결과가 같다면 제대로 레이아웃을 설정한 것입니다. 