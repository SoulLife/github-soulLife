CHAPTER12 : 탭바 컨트롤러
지금까지 우리가 만들어본 화면 구조는 대부분 상위-하위 관계로 이어지는 수직 구조였지만 때로는 수평적 관계의 독립적인 화면을 나열해야 할 때도 있습니다. 이때 별도의 메뉴 페이지를 구성하여 각각의 화면에 접근할수 있게 하거나 또는 첫 화면을 목록으로 구성하고 여기서 각각의 개별 화면으로 연결되도록 하는 방법도 있겠지만 이보다 효율적인 접근 구조를 만들수 있는 방법이 있습니다. 바로 탭 바입니다. 이번 장에서는 탭 바 컨트롤러를 통해 탭 바를 추가하고 독립적인 화면을 엮어 관리하는 방법을 알아볼 예정입니다 

탭바 컨트롤러는 앞서 학습한 테이블 뷰 컨트롤러와는 다르게 기술적으로 깊게 접근할 필요는 없습니다. 대부분의 구현 작업은 스토리보드만으로도 충분하여 이것으로도 제 역할을 하는 기특한(?) 컨트롤러입니다. 이번 장에서는 앞에서 진행하던 MyMovieChart 앱을 확장하여 영화관 정보를 출력해 보고 이 화면을 탭바 컨트롤러로 제어하는 과정을 실습해 보겠습니다. 



12.1 탭 바 컨트롤러
탭 바 컨트롤러(Tab Bar Controller)는 수평적 관계의 독립된 각 화면에 바로 접근할수 있도록 탭 바를 제공하는 컨트롤러입니다. 독립된 하나의 화면과 콘텐츠를 가지지 않는 대신 각각의 화면과 연결된 탭 바를 화면 하단에 나열하여 다른 뷰 컨트롤러를 제어하죠. 마치 내비게이션 컨트롤러가 내비게이션 바를 화면 상단에 삽입하는 것과 같은 식입니다. 

이같이 직접 콘텐츠를 표현하지 않으면서 다른 뷰 컨트롤러를 유기적인 관계로 제어하는 역할을 하는 컨트롤러를 컨테이너 컨트롤러(Container Controller)라고 부릅니다. 대표적으로 내비게이션 컨트롤러나 분할 뷰 컨트롤러, 페이지 뷰 컨트롤러 등이 있습니다. 

탭 바 컨트롤러는 스토리보드에서 대부분 맨 앞에 위치합니다. 심지어는 지금까지 맨 앞에 위치했던 내비게이션 컨트롤러보다도 앞선 위치죠. 그도 그럴 것이 내비게이션 컨트롤러는 위에서 아래로 향하는 뷰 컨트롤러 사이의 수직적 이동에 최적화되어 있습니다. 주로 상위 페이지에서 하위 페이지로의 이동이죠. 

하지만 수평적인 관계를 가지는 화면 흐름을 내비게이션 컨트롤러로 관리하면 무척 어색합니다. 내비게이션 컨트롤러가 가지는 계층 구조와 수평적 화면 관계가 서로 맞지 않기 때문입니다. 이때문에 이런 화면들은 탭 바 컨트롤러를 사용해야 자연스럽습니다. A 메뉴에 속한 화면을 보고 있다가 다른 탭을 눌러 바로 B 메뉴의 화면을 보는 식으로 말입니다. 

대부분의 앱은 수평관계를 가진 화면들과 수직 관계를 가진 화면들을 모두 포함하므로 탭 바 컨트롤러로 수평 이동을 처리한 다음 내비게이션 컨트롤러로 수직 이동을 처리하는 방식으로 화면을 구성하는 경우가 많습니다. A 메뉴의 화면에서 탭 바를 통해 B 메뉴로, 이어서 내비게이션 컨트롤러를 통해 B의 상세 페이지로 이동하는 식입니다. 이런 관계적 특성 때문에 스토리보드 구조에서는 탭 바 컨트롤러가 가장 앞에 위치하여 상위 페이지들 사이의 관계를 제어합니다. 


12.1.1 탭 바의 기본 개념
다음 그림을 통해 탭 바 컨트롤러와 내비게이션 컨트롤러의 위치 관계를 조금 더 이해해봅시다. iOS에서 기본으로 제공하는 시계 앱입니다. 

시계앱은 세계시계, 알람, 스톱워치, 타이머의 네 가지 화면으로 이루어져 있습니다. 일반적인 시각에서 메뉴라고 부르는 것들이죠. 화면이든 메뉴든, 이들이 수평 관계를 이루고 독립적인 기능을 제공한다는 사실에는 변함이 없습니다. 다른 화면의 하위 화면이거나 기능적으로 종속되어 있지 않다는 뜻입니다. 

이들 독립된 화면은 다시 명확한 종속 관계를 가지는 세부 화면으로 이루어집니다. 세부 화면들은 서로 간에 계층적 연관 관계를 가지고 있으며 다른 화면에 종속되거나 다른 화면을 제어하기 도 합니다. 이렇듯 수평 관계를 이루는 화면들은 탭 바 컨트롤러에 의해 제어되고, 수직 관계를 이루는화면들은 내비게이션 컨트롤러에 의해 제어됩니다. 

시계앱의 구조
세계시계			알람			스톱워치			타이머		> 탭 바 컨트롤러
시계목록			알람목록			시간측정			타이머 설정
시계추가			알람추가						종료음 선택

내비게이션 컨트롤러	내비게이션 컨트롤러	내비게이션 컨트롤러	내비게이션 컨트롤러

뷰 컨트롤러가 탭 바 컨트롤러의 제어 하에 놓이면 뷰 컨트롤러의 화면 하단에는 탭 바(Tab Bar)가 표시됩니다. 각 탭은 각각에 대한 뷰 컨트롤러와 직접 연결되어 있으므로 사용자는 이들 탭 바의 각 탭을 클릭함으로써 원하는 다른 탭의 화면으로 바로 이동할수 있습니다. 


탭 바는 내비게이션 바와 마찬가지로 탭 바 컨트롤러에 의해 자동으로 추가되는 객체입니다. 내비게이션 바와 탭 바는 단순히 하나의 평면에 추가되어 일부 영역을 차지하는 것처럼 보이지만 실제로는 그렇지 않습니다. 시계 앱의 화면 구조를 개념적으로 분해한 다음 그림을 통해 내비게이션 바와 탭 바의 구성을 살펴봅시다. 


그림에서 보는 바와 같이 시계 앱의 화면은 여러 장의 투명한 필름이 겹쳐진 레이어 구조로 이루어져 있습니다. 개념적으로 가장 아래에 우리가 직접 구현한 뷰 컨트롤러가 있고, 그 위로 내비게이션 뷰 컨트롤러가 다시 그위로 탭 바 컨트롤러가, 그리고 이들을 모아 화면에 배치해주는 윈도우 객체가 순서대로 겹쳐져서 우리가 보는 시계 앱의 화면을 이루죠. 탭 바는 윈도우 객체 바로 아래에 위치하여 앱 화면 최상위에서 수평적인 화면 이동을 처리합니다. 

탭 바 컨트롤러는 내비게이션 컨트롤러와 유사한 점이 많습니다. 실질적인 콘텐츠 뷰를 갖지 않는 대신 관련 바(Bar)가 내장된다는 점도 유사하고, [Editor] > [EmbedIn] > [Tab Bar Controller]메뉴를 사용하여 특정 뷰 컨트롤러 앞에 끼워 넣을수 있다는 점도 유사합니다. 물론 내비게이션 컨트롤러를 프로그래밍적으로 제어하여 화면을 이동할수 있듯이 탭 바 컨트롤러를 프로그래밍적으로 제어하여 다른 탭으로 화면을 전환할수도 있죠. 

탭 바 컨트롤러 객체는 UITabBarController 클래스에 정의되어 있습니다. 따라서 탭 바 컨트롤러를 커스터마이징하려면 UITabBarController 클래스를 상속받아야 합니다. 하지만 탭 바 컨트롤러는 기본 기능만으로도 우리가 원하는 바를 충분히 지원하므로 커스터마이징하는 일은 많지 않습니다. 우리도 실습 과정에서는 기본 탭 바 컨트롤러를 사용하여 화면을 구현할 예정입니다. 

탭 바 컨트롤러는 각각의 탭 마다 자신의 루트 뷰 컨트롤러와 직접 연결됩니다. [Embed In]메뉴를 이용한 방식이 아닌 오브젝트 라이브러리를 통해 탭 바 컨트롤러를 추가하면 탭 바에 연결된 두 개의 뷰 컨트롤러가 함께 추가되는 것은 그 때문입니다. 

이렇게 추가된 뷰 컨트롤러들을 이용해서 화면을 새로 구현해도 되지만 이미 어느 정도 뷰 컨트롤러에 UI가 구현된 상태에서 탭 바 컨트롤러만 떼어내어 연결하고자 한다면 무척 번거롭습니다. 차라리 일반 뷰 컨트롤러 앞에 내비게이션 컨트롤러를 삽입하고 그 앞에 다시 탭 바 컨트롤러를 삽입하는 방식으로 작업하는 것이 효율적입니다. 우리의 실습도 마찬가지 입니다. MyMovieChart 프로젝트에서는 뷰 컨트롤러가 이미 구현되어 있기 때문에 [Embed In] 메뉴를 통해 탭 바 컨트롤러를 추가할 예정입니다. 




12.1.2 탭 바에 새탭 추가하기
탭 바에 새 탭을 추가하는 과정은 매우 단순합니다. 먼저 탭 바에 연결할 뷰 컨트롤러를 스토리보드에 추가한 다음, 탭 바 컨트롤러에서 <Ctrl> + 드래그하여 추가된 뷰 컨트롤러를 연결합니다 그러면 세그웨이 연결과 마찬가지로 팝업 창이 표시되는데, 여기서 [Relationship Segue]항목 아래 view controllers를 선택하면 됩니다. 

이 과정을 간단히 정리하면 아래와 같습니다. 

1. 탭 바에 연결할 뷰 컨트롤러를 스토리보드에 추가
2. 탭 바 컨트롤러에서 <Ctrl> + 드래그하여 추가된 뷰 컨트롤러를 연결
3. 표시된 팝업 창에서 [Relationship Segue]항목 아래 view controllers 선택

이렇게 하면 탭 바에는 자동으로 새로운 탭이 추가됩니다. 그리고 이 탭은 조금 전 생성한 뷰 컨트롤러와 연결되어 있죠. 




12.1.3 탭 바의 주요 기능
탭 바 컨트롤러와 뷰 컨트롤러 사이의 연결 역시 세그웨이의 일종이라고 할 수 있는데 이 세그웨이를 관계형 세그웨이(Relationship Segue)라고 합니다. 관계형 세그웨이는 화면의 이동 대신 특정 타입의 컨트롤러가 다른 뷰 컨트롤러를 품을수 있도록 연결해주는 일종의 고리로 작용합니다. 관계형 세그웨이를 사용하여 뷰 컨트롤러를 연결하는 특정 타입의 뷰 컨트롤러에는 내비게이션 컨트롤러, 탭 바 컨트롤러, 분할 뷰 컨트롤러(Split-View Controller)등이 있습니다. 이들은 모두 자신의 화면은 없지만 다른 뷰 컨트롤러를 제어할수 있는 특징이 있습니다. 



※ 순서변경
탭 바 컨트롤러에서는 탭 바의 순서를 아주 손쉽게 변경할수 있습니다. 바꾸려는 탭을 드래그하여 원하는 탭 위치에 놓기만 하면 됩니다. 원래 그 자리에 있던 탭은 다음 순서로 차례대로 밀려나고, 본래 탭이 있던 빈자리는 드래그한 탭이 차지합니다. 



※ 아이콘
탭 바의 각 탭에는 간단한 아이콘을 사용하여 해당 탭의 성격을 축약적으로 표현할수 있습니다. 직접 제작한 아이콘 이미지를 사용해도 되지만 탭 바에서는 기본적인 아이콘 타입 몇 가지를 제공하므로 이를 이용하면 손쉽게 아이콘을 적용할수 있습니다. 기본 제공 아이콘을 사용하려면 각각의 뷰 컨트롤러에 내장된 탭 바를 선택하고, 어트리뷰트 인스펙터 창을 열어 [Tab Bar Item] > [System Item]항목의 옵션 중 원하는 항목을 선택하면 됩니다. 이때 중요한 것은 탭 바 컨트롤러에 있는 탭 바에서 탭을 선택하는 것이 아니라 각각의 탭에 연결된 뷰 컨트롤러 하단에 표시된 탭을 선택해야 한다는 점입니다. 사실 개별 탭은 탭 바에 구현되는 것이 아니라 각각의 뷰 컨트롤러에 구현됩니다. 탭 바는 이들 탭 정보를 모아 배열하고 한꺼번에 보여주는 역할 이상은 하지 않습니다. 따라서 개별 탭의 정보를 수정하려면 개별 뷰 컨트롤러에 있는 탭을 편집해야 합니다. 

선택할 수 있는 아이콘의 종류는 다양합니다. 아래 그림은 탭 바에 적용할수 있는 기본 아이콘의 종류를 보여주고 있습니다. 




※ 배지
탭 바에 연결된 특정 화면에 중요한 알림이 있거나 사용자에게 전달해야 하는 내용이 있을 경우 이를 숫자나 간단한 문자로 탭 바에 표시할수 있습니다. 이를 배지(Badge)라고 하는데 스마트폰을 사용해본 사람이라면 한 번쯤 보았을 핵심 알림 기능입니다. 

배지를 설정할 때는 인스펙터 탭에서 [Tab Bar Item] > [Badge]속성에 원하는 값을 넣으면 됩니다. 숫자를 넣어서 알려주어야 할 정보의 개수를 표현할수도 있지만 단순히 N등의 문자로 알림이 있다는 표시만 해도 됩니다. 

배지를 동적으로 표시하고자 할 때는 프로그램적으로 처리해야 합니다. tabBarItem 객체 아래 badgeValue라는 문자열 타입의 속성이 배지값을 의미하므로 여기에 적당한 값을 대입하여 동적인 배지 처리를 할 수 있습니다. 


※ More 탭
탭 바 컨트롤러는 공간 제약상 세로 화면의 아이폰에서 최대 다섯 개 탭까지 표현할수 있도록 설계되어 있습니다. 만익 탭 바에 5개 이상 탭을 추가하면 앞에서부터 순서대로 4개만 표시되고 그 다음 탭 대신 More라는 타이틀의 탭이 추가됩니다. 

More 탭을 클릭하면 나머지 탭을 목록 형식으로 보여주는 테이블 뷰가 나타나는데, 여기서 하나를 선택하면 곧 탭을 클릭한 것과 같이 연결된 화면으로 전환됩니다. 이 화면은 iOS에서 자동으로 처리하기 때문에 스토리보드에는 나타나지 않습니다. 

이외에도 탭 바 컨트롤러에 대해 학습해야 할 내용이 더 있지만 나머지는 실습 과정을 통해 차차 알아보기로 하겠습니다. 탭 바 컨트롤러를 사용하기 위해 영화관 정보를 제공하는 기능 하나를 더 추가해야 하므로 실습 과정은 부득이하게 탭 바 컨트롤러라는 주제보다 영화관 정보를 출력하는 과정이 주를 이루겠지만 이 역시 다음으로 이어질 학습을 위한 부분입니다. 





12.2 탭 바를 이용한 영화관 정보 제공
MyMovieChart 앱에 영화관 목록 화면을 만들고 이를 탭 바 컨트롤러로 기존 화면과 연결해보겠습니다. 제일 먼저 할 일은 탭 바 컨트롤러를 추가하는 것입니다. 앞서 우리는 이미 목록과 상세 페이지 등 몇 개의 화면을 만들어 둔 상태이므로 오브젝트 라이브러리에서 직접 탭 바 컨트롤러를 추가하는 대신 Embed 방식으로 탭 바 컨트롤러를 추가하는 것이 좋겠습니다. 


12.2.1 탭 바 컨트롤러 구성
STEP1 : 스토리보드에서 내비게이션 컨트롤러를 클릭하여 활성화한 다음 메뉴에서 [Editor] > [Embed in] > [Tab Bar Controller]를 차례로 선택하여 탭 바 컨트롤러를 삽입합니다. 

내비게이션 컨트롤러 앞쪽에 추가된 탭 바 컨트롤러를 확인합니다. 내비게이션 컨트롤러 이하 나머지 뷰 컨트롤러에는 다음과 같이 탭 바가 추가되어 있어야 합니다. 


STEP2 : 내비게이션 컨트롤러 아래에 추가된 탭 바에서 탭의 item 텍스트 부분을 더블클릭하여 탭명을 영화 차트로 수정합니다. 

앞서 탭 바의 아이콘을 변경하려면 개별 뷰 컨트롤러의 탭을 클릭하여 선택해야 한다고 설명했는데, 탭 바의 타이틀을 수정할 때에도 마찬가지입니다. 탭 바 컨트롤러에 있는 탭바가 아니라 탭 바에 연결된 내비게이션 컨트롤러의 탭 바(Tab Bar)를 클릭해야 합니다. 
탭 바를 더블클릭하여 수정하는 대신, 탭 바를 선택한 상태에서 어트리뷰트 인스펙터 창의 [Bar Item] > [Title] 항목을 수정해도 결과는 같습니다. 


STEP3 : 탭 바 아이콘을 변경하겠습니다. 자료실에서 내려받은 TabIcon.zip 파일의 압축을 풀고 Listbullet.png, Trailer.png 파일을 프로젝트 내비게이터의 Resources 그룹에 드래그하여 추가합니다. 

텍스트보다 이미지가 가독성이 훨씬 좋은 것은 일반적으로 알려진 사실입니다. 특히 아이콘은 전달하고자 하는 내용을 함축적으로 담고 있으므로 아이콘을 탭 바에 활용하면 보다 명확하게 어떤 기능을 하는 탭인지 직관적으로 알려줄 수 있습니다. 

탭 바 컨트롤러에 아이콘을 사용할 때에는 주의해야 합니다. 탭 바 컨트롤러에 넣은 아이콘은 그림의 색 정보, 즉 Opaque는 모두 무시되고 그림에 포함된 알파값만 표시되거든요. 다시 말해 원래의 색상은 무시되고 형태와 투명도 정도만 표시된다는 것이죠. 

이는 탭 바의 선택 여부 상태를 구분해서 보여주기에 이같은 색상 형태가 제일 적합하기 때문입니다. 탭 바에 표현하는 이미지의 색상을 모두 표현할수 있도록 커스터마이징하는 방법도 있지만 탭 바용 아이콘을 제작할때에는 색상 대신 알파값만을 이용하여 내용을 표현할수 있도록 별도로 제작하는 것이 좋습니다. 

탭 바에 들어가는 이미지는 탭 바에 맞춰서 리사이징(Re-Sizing)되지 않는 특성이 있습니다. 따라서 이미지의 기본 크기인 가로세로30픽셀에 맞춰서 만들어야 합니다. 다만 60x60크기로 제작한 다음 이미지의 이름뒤에 @2x를 붙여주면 iOS 시스템은 두 배 해상도로 제작된 30x30크기의 이미지로 인식합니다. 90x90크기로 제작한 이미지라면 이미지 이름뒤에 @3x라고 작성해주면 되겠죠. 이와같은 방식으로 제작된 이미지들은 기존의 30x30이미지보다 훨씬 높은 해상도를 갖게 됩니다. 

※ 30 X 30 : sample.png

※ 60 X 60 : sample@2x.png

※ 90 X 90 : sample@3x.png

이 책에서 제공하는 이미지가 마음에 들지 않는다면 아이콘을 제공하는 사이트를 직접 찾아 사용할 수도 있습니다. 단 여러분이 만들고자 하는 것이 상용 앱이거나 공개된 앱이라면 아이콘 사용 시 반드시 저작권을 확인하기 바랍니다. 


STEP4 : 탭 바를 선택한 상태에서 어트리뷰트인스펙터 창의 [Bar Item] > [Image]속성값을 Trailer.png로 설정합니다. 

프로젝트에 추가된 이미지는 자동으로 속성창의 이미지 목록에 등록되어 선택할수 있는 상태가 됩니다. Image 속성의 이미지 목록 중에서 Trailer.png를 선택하면 설정한 이미지가 탭 바에 반영되는 것을 바로 확인할수 있습니다. 

탭 바 속성에는 이미지를 설정할수 있는 영역이 두 군데 있는데, 이 때문에 종종 잘못된 곳에 이미지를 설정하기도 합니다. 우리가 설정해야 하는 부분은 아래 그림에서 표시된 [Bar Item] > [Image] 속성입니다. [Tab Bar Item] > [ Selected Image] 속성이 아님에 주의하기 바랍니다. 



STEP5 : 영화관 목록 화면을 구성하기 위해 스토리보드에 내비게이션 컨트롤러를 추가합니다. 
함께 딸려오는 테이블 뷰는 그대로 둡니다. 이 테이블 뷰에 영화관 목록 화면을 구현할 거니까요. 

STEP6 : 탭 바 컨트롤러에서 <Ctrl> + 드래그하여 방금 추가한 내비게이션 컨트롤러로 연결하고 표시되는 팝업 메뉴에서 [Relationship Segue] > [view controllers]를 선택합니다. 

이작업으로 인해 탭 바 컨트롤러가 새로운 내비게이션 컨트롤러와 연결되면서 탭 바가 추가됩니다. 이제 탭 바의 개수는 모두 두개 입니다. 



STEP7 : 새로 추가된 탭 바의 타이틀을 영화관으로 이미지를 Listbullets.png로 설정합니다. 이어서 테이블 뷰의 내비게이션 타이틀은 영화관 정보로 작성합니다. 만약 내비게이션 타이틀이 편집 상태로 바뀌지 않는다면 내비게이션 아이템을 추가한 후 다시 시도해 보기 바랍니다. 

이렇게 해서 탭 바 컨트롤러가 추가되었습니다. 앱을 실행해보면 기존 화면 아래에는 탭 바가 나타나고 이를 클릭해보면 다음과 같이 영화관 목록 화면이 나타납니다. 이어지는 실습에서는 영화관 목록 화면에 내용을 채워넣어 보겠습니다. 