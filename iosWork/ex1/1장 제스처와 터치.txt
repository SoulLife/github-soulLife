터치 이벤트와 리스폰더 메소드
UIView와 UIViewController등 UIResponder 클래스의 모든 하위 클래스는 터치에 반응한다. 각 클래스는 터치에 대한 반응 여부와 터치에 어떻게 반응할지 결정 한다. 이런내용을 결정하고 나면 사용자가 뷰나 윈도우를 하나 혹은 여러 개의 손가락으로 터치할 경우 미리 정의된 동작이 화면에 표시된다. 미리 정의해둔 콜백 메소드가 터치의 시작, 이동, 종료 동작을 처리한다. 앞서 소개한 터치 단계에 맞춘 메소드는 다음과 같다. 단 UITouchPhaseStationary단계는 별도의 콜백을 만들지는 않는다. 

touchesBegan:withEvent: 사용자가 화면을 터치하기 시작할 때 이벤트의 시작 단계에서 호출된다. 
touchesMoved:withEvent: 시간의 흐름에 따라 손가락의 움직임을 처리한다. 
touchesEnded:withEvent: 손가락이 화면에서 벗어났을 때 호출되며, 연속적인 터치의 흐름 동안 발행한 기존 정보를 삭제하는 데도 사용한다. 
touchesCancelled:WithEvent: 코코아 터치 시스템이 개입해서 지속적인 터치 이벤트를 취소할때 호출된다. 

이들은 모두 UIResponder 메소드이며, UIView나 UIViewController의 하위 클래스에서 구현되곤 한다. 모든 뷰는 이들 메소드의 기능이 배제된 기본적인 내용을 상속한다. 애플리케이션에 터치 동작을 추가하고자 한다면이들 메소드를 오버라이딩해서 각자의 요구 사항에 맞는 응답을 보내도록 코드를 작성한다. 
여러분이 작성한 클래스에서는 이들 메소드 모두나 일부만 구현할 수 있다. 실제 배포할 앱개발에서는 사용자가 화면에서 손가락을 떼거나 갑작스레 전화가 왔을때 지속적으로 입력된 터치 정보를 취소할 수 있는 touchesCancelled이벤트가 항상 사용된다. 

그리고 이렇게 취소된 터치 입력은 touchesEnded:withEvent:메소드로 전달된다. 이를 통해 사용자의 손가락이 여전히 화면에 있는 상태에서도 터치 흐름을 안정적으로 종료할수 있다. 애플은 터치를 처리함에 있어 네 개의 메소드 모두를 오버라이딩할 것을 권장한다. 

