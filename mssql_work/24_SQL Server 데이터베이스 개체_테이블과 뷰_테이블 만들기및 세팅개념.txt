Part 03 : SQL Server 데이터베이스 개체

CHAPTER08 : 테이블과 뷰
테이블의 생성 및 사용은 지금까지 계속 반복해왔다. 별다른 설명을 하지 않았어도 사용에 별로 어려움을 느끼지 못했을 것이다. 다시 한번 확인 차원에서 간단히 테이블을 생성해 보고, 제약 조건(Constraint)및 테이블의 수정에 대해서 자세히 알아보자. 

* SQL Server 2008부터 테이블의 압축 기능이 제공된다. 대용량의 데이터가 들어간 테이블의 저장 공간을 대폭 절약할 수 있다. 이에 대해서는 2권(관리와 응용)에서 다룬다. 


※ 테이블 만들기
(1) SQL Server Management Studio(SSMS)에서 테이블 생성
우리는 이미 3장에서 SSMS를 이용해서 테이블을 만들어 봤다. 즉 SSMS에서 테이블을 만드는 방법은 전혀 어렵지가 않았다. 테이블은 만드는 방법이 중요한 것이 아니라, 테이블을 어떻게 모델링(설계)했느냐가 훨씬 중요하다. 테이블을 만드는 것은 설계에 따른 SQL 문법이나 SSMS의 사용법에만 맞춰서 생성하면 되는 것이다. 데이터베이스 모델링은 4장에서 알아보았으므로 이번 장은 단지 테이블을 생성하고 관리하는 것에만 초점을 맞추도록 하자. 


6장에서 실습했던 sqlDB와 같은 형식의 tableDB를 만들자. 구조도는 다음과 같다. 



실습 1 : SSMS의 개체 탐색기에서 테이블을 생성하고, 데이터를 입력해 보자. 

0. SSMS나 쿼리를 이용해서 디폴트 값으로 'tableDB를 생성한다. 
0-1 앞 장에서 실습했던 내용이 남아 있으면 보기 싫을 수 있으므로, 우선 사용했던 데이터베이스를 제거하자 독자에 따라서 다음 구문이 오류가 날 수 있으나 관계없다(당연히 없는 데이터베이스는 제거되지도 않는다.)

USE tempdb;
GO
DROP DATABASE ShopDB, ModelDB, sqlDB;

0-2 tableDB를 생성해 보자. 

CREATE DATABASE tableDB;

1. 개체 탐색기에서 데이터베이스를 [새로 고침]한다. 그리고 tableDB 데이터베이스를 확장해서 테이블을 선택한 후에 마우스 오른쪽 버튼을 클릭하고 [새 테이블]을 선택한다. 


2. [그림8-1]의 회원 테이블과 구매 테이블을 입력한다. 
2-1 먼저 회원 테이블을 다음과 같이 입력한다. 아직 기본 키(Primary Key)및 외래 키(Foreign Key)는 설정하지 않고, 그냥 열 이름 및 데이터 형식만 선택해 준다. 

* 열 이름은 한글로도 지정할 수 있다. 그러나 권장하지 않는다. 

2-2 [그림8-1]을 보면 회원 테이블은 아이디(userID)열이 기본키로 되어 있다. 다음 그림과 같이 userID에서 마우스 오른쪽 버튼을 클릭하고 [기본 키 설정]을 선택한다. 설정 후에는 userID앞에 열쇠모양이 표시된다. 

2-3 저장 아이콘을 클릭하거나, SSMS 메뉴의 [파일] > [Table_1 저장]을 선택해서 저장한다. 테이블 이름은 'userTbl'로 입력하면 된다. 

2-4 같은 방식으로 [새 테이블]을 선택해서 구매 테이블(buyTbl)을 입력한다. 


2-5 buyTbl도 num 열에서 마우스 오른쪽 버튼을 클릭하고 [기본 키 설정]을 선택해서 기본키로 설정한다. 

2-6 buyTbl의 순번(num)은 순차번호이므로 별도로 입력해주는 것보다 시스템이 자동으로 입력시켜 주는 것이 더 낫다. 이러한 속성을 identity라고 부르는데, 이는 6장에서 배웠다. 우선 num 열이 1부터 1씩 자동으로 증가되게 설정하자. num열을 클릭하면 아래 부분에 열 속성이 나온다. 그 중 ID 사양 앞의 >를 클릭해서 확장한 후 (ID)항목을 예로 선택하면 된다. 디폴트로 ID 초기값은 1이며, ID 증가값도 1로 설정되어 있다. 

2-7 저장 아이콘을 클릭하거나 SSMS 메뉴의[파일] > [Table_1 저장]을 선택해서 저장한다. 



3. 개체 탐색기에 테이블을 새로 고침하면 생성된 테이블이 보인다. 그런데 테이블의 이름앞에 dbo가 붙어있다. 이것은 기본 스키마로 테이블을 생성할 때 디폴트로 붙는 스키마 이름이다. 이에 대해서는 잠시 후에 이야기 하겠다. 지금은 그냥 테이블 이름만 주고 저장하면 앞에 디폴트로 dbo.가 붙는다고 생각하자. 


4. 이번에는 [그림8-1]의 구매 테이블의 userID 열을 외래 키(Foreign Key)로 설정하자. 
4-0 혹시 앞에서 사용하던 테이블 창이 닫혔으면 개체 탐색기에서 해당 테이블을 선택한 후, 마우스 오른쪽 버튼을 클릭하고 [디자인] 을 선택하면 다시 디자인 창이 나온다. 

4-1 buyTbl의 아무 곳에서나 마우스 오른쪽 버튼을 클릭하고 [관계]를 선택한다. 

4-2 외래 키 관계창이 나오면 <추가> 버튼을 클릭한 후에, 테이블 및 열 사양의 <...>을 클릭한다. 

4-3 먼저 기본키 테이블을 [그림 8-1]과 같이 회원 테이블(userTbl)을 선택하고 열은 userID를 선택한다. 
그리고 외래 키 테이블의 열을 userid로 선택한다. 그러면 자동으로 관계 이름이 FK_buyTbl_buyTbl에서 FK_buyTbl_userTbl로 변경될 것이다. <확인> 버튼을 클릭한다. 


4-4 다시 외래 키 관계창의 테이블 및 열 사양 앞의 >를 클릭해서 확장하면 다음 그림과 같이 나타난다. 이는 [그림8-1]의 외래키 관계와 똑같게 구성된 것이다. <닫기> 버튼을 클릭해서 창을 닫는다. 


5. 테이블의 구조가 변경되었으므로, 각 테이블 창에서 <저장> 버튼을 눌러 저장하거나 SSMS 메뉴의 [파일] > [모두 저장]을 선택해서 저장한 후, 열린 창을 모두 닫는다. 저장 할 때 메시지 창이 뜨면 그냥 <예> 버튼을 클릭한다. 

개체 탐색기를 새로 고침하면 키 부분을 확인할 수 있다. 

설정 키 중에서 접두어가 PK인 것은 기본 키인 Primary Key를 의미하고, FK인 것은 외래 키인 Foreign Key를 의미한다. 물론 이 접두어를 다른 것으로 바꿀 수도 있으나, 그 냥 사용하는 것이 편리하다. 



6. 이번에는 데이터를 SSMS에서 입력해 보자. 
6-0 우선 개체 탐색기를 제외하고 열린 창들을 모두 닫는다. 

6-1 개체 탐색기에서 tableDB의 dbo.userTbl을 선택한 후, 마우스 오른쪽 버튼을 클릭하고 [상위 200개행 편집]을 선택한다. 테이블이 열리면 [그림8-1]의 값을 3개 행만 입력한다. 그런데 입력 중에 빨간색의 느낌표가 나오는 것은 아직 데이터가 커밋(Commit, 저장과 비슷한 개념)되지 않았다는 의미이다. 행 데이터는 다른 행으로 마우스 커서가 이동되는 순간에 커밋된다. 그러면 빨간색 느낌표도 없어질 것이다. 

입력 창을 닫는다. 

* SSMS에서 데이터를 입력할 때는 별도로 저장할 필요가 없다. 각 행에서 커서가 떠나는 순간에 커밋되어서 테이블 내에 행 데이터가 저장되기 때문이다. 


그대로 두면 되고 나머지 열만 입력하면 된다. 

6-3 세 번째 행을 입력하고, 마우스 커서를 이동하면 다음과 같은 오류 메시지가 나올 것이다. 


이 오류는 회원 테이블과 구매 테이블은 외래 키로 연결되어 있으므로, 구매 테이블의 userID의 값은 반드시 회원 테이블의 userID로 있어야 한다는 의미다. 여기서는 회원 테이블에서 JYP(조용필)라는 회원은 아직 입력하지 않아서 생기는 문제다(이것은 회원가입을 하지 않고 물건을 구매하지 못하게 업무 프로세스를 설정한 것과 같다. )

6-4 <확인> 버튼을 클릭하고 ESC 키를 몇 번 누르면 세 번째 행은 취소된다. 입력 창을 닫는다. 

6-5 그러므로 구매 테이블의 외래키로 설정된 userid에 데이터가 입력되려면 그 기본값이 회원테이블의 userid열에 있어야만 한다. 



※ 여기서 잠깐?
입력 실수 또는 삭제 후 다시 입력할 경우에 identity 값이 설정된 num 열은 처음으로 돌아가지 않고 계속 증가된 값으로 입력된다. 그럴 경우에 identity의 값을 변경하려면 DBCC CHECKIDENT(테이블이름, RESEED, 초기값)명령을 입력한다. 
예를 들어, buyTbl의 num 컬럼을 재설정하고 싶다면 우선 현재의 ID 값을 확인한다. 

결과값:
ID 정보 확인 : 현재 ID 값은 4이며 현재 열 값은 2입니다. 
DBCC실행이 완료되었습니다. DBCC에서 오류 메시지를 출력하면 시스템 관리자에게 문의하십시오. 

데이터를 처음부터 다시 입력할 때 ID 값을 0으로 설정하면 다음 입력값은 1이 될 것이다. 

DBCC CHECKIDENT('buyTbl', RESEED, 0)

결과 값:
ID 정보 확인 : 현재 ID 값은 '4'입니다. 
DBCC 실행이 완료되었습니다. DBCC에서 오류 메시지를 출력하면 시스템 관리자에게 문의하십시오. 



이정도로 SSMS에서 데이터를 입력하는 방법을 마치고 이번에는 T-SQL로 테이블을 생성하고 데이터를 입력해 보자. 앞으로 필자가 권장하는 방법은 SSMS가 아닌 T-SQL 방법을 권장한다. SSMS는 편리하고 직관적이기는 하지만 SQL Server 가 아닌 다른 DBMC에서는 통용되는 방법이 아니므로 T-SQL을 사용하는 것이 더 바람직하다. 초보자의 경우에는 SSMS가 편리하게 느껴질 수도 있으나, 어느 정도 SQL Server에 익숙해진다면 오히려 T-SQL이 더 편리하고 유연함을 느끼게 될 것이다. 