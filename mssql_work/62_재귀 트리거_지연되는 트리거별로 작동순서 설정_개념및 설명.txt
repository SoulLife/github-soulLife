※ 재귀 트리거
재귀 트리거(Recursive Trigger)는 트리거가 작동해서 다시 자신의 트리거를 작동시키는 것을 말한다. 간접 재귀와 직접 재귀두 가지 종류가 있다. 

간접 재귀 트리거는 두 테이블이 서로 트리거로 물려 있는 경우를 말한다. 앞의 예에서 최초로 1.INSERT 작업이 일어나면 A 테이블의 트리거가 작동해서 B 테이블에 2. INSERT 작업을 하게 되고, B 테이블에서도 트리거가 작동해서 3. INSERT 작업을 수행하게 된다. 그리고 다시 A 테이블의 트리거가 작동해서 2. INSERT가 작동하게 되는 순환 구조를 갖는다. 

직접 재귀 트리거는 앞의 그림과 같이 자신의 테이블에 자신이 순환적으로 트리거를 발생시키는 구조를 갖는다. 재귀 트리거는 32단계까지 반복되며, 반복 중에 문제가 발생하면 모든 것이 ROLLBACK 된다. 

재귀 트리거도 다른 프로그래밍 언어에서와 마찬가지로 재귀를 빠져나올 수 있는 루틴을 마련해 놓아야 한다. 그렇지 않으면 무한 루프를 돌게 된다. 

* 재귀 트리거는 32단계로 제한하므로 32단계까지 진행하고 모두 롤백된다. 즉 아무런 작업하지 않고 32단계의 트랜잭션만 발생시키고 롤백되는 쓸데없는 일을 하는 결과가 된다. 


재귀 트리거는 기본적으로 허용되어 있지 않다. 재귀 트리거를허용하려면 ALTER DATABASE를 사용하여 RECURSIVE_TRIGGERS 설정을 활성화 해야 한다. 


여기서잠깐?
중첩 트리거는 SQL Server의 전체에 영향을 미치는 서버 구성 옵션이므로 sp_configure로 설정해야 하며, 재귀 트리거는 데이터베이스 옵션이므로 각 데이터베이스별로 ALTER DATABASE로 설정해야 한다. 





※ 지연된 이름 확인
지연된 이름 확인(deferred name resolution)은 11장 저장 프로시저 부분에서도 나왔던 것과 같은 개념이다. 즉 트리거를 정의할 때 해당 개체(주로 테이블)가 없더라도 트리거가 정의되는 것을 말한다. 실제로 개체가 있는지는 트리거를 실행할 떄 체크하게 된다. 


※트리거의 작동 순서
하나의 테이블에 여러 개의 AFTER 트리거가 부착되어 있다면, 트리거의 작동 순서를 지정할 수 있다. 


* INSTEAD OF 트리거의 경우에는 DML 문이 작동하기 이전에 작동하는 트리거이므로 순서를 지정하는 것이 의미가 없다.. 


몇 가지 주의할 점이 있는데, 우선 작동 순서 전체를 지정할수 없고 처음(FIRST)과 끝(LAST)에 작동할 트리거만을 지정할 수 있다.  즉 INSERT/UPDATE/DELETE 트리거마다 FIRST, LAST를 지정할 수 있으므로 총 6개를 지정할 수 있다.예를 들어 trgA, trgB, trgC, trgD 네 개의 INSERT 트리거가 한 테이블에 부착되어 있다면 다음과 같이 작동 순서를 지정할 수 있다. 

sp_settriggerorder @triggername = 'dbo.trgA', @order='First',
	@stmttype = 'INSERT';
sp_settriggerorder @triggername = 'dbo.trgD', @order='Last',
	@stmttype = 'INSERT';

trgA는 가장 먼저 작동하고, trgD는 가장 나중에 작동한다. 그 외 trgB, trgC는 작동 순서를 지정할 수없는 None이 된다.또한 ALTER TRIGGER로 트리거를 수정하게 되면, 지정된 수행 순서는 모두 취소되므로 다시 순서를 지정해 줘야 한다. 


여기서잠깐?
트리거의 순서를 지정할 경우에는 되도록 SQL Server의 성능에 도움이 되게 지정하는 것이 좋다. 예를 들어 trgA, trgB, trgC 세 개의 INSERT 트리거의 순서를 지정할 때 trgA의 내용은 오류가 거의 일어나지 않고 trgC의 내용은 종종 오류가 발생된다고 가정해보자. 이런 경우에는 되도록 오류(또는 롤백)가 발생될 확률이 높은 trgC 트리거를 FIRST로 오류가 발생될 확률이 낮은 trgA를 LAST로 지정하는 것이 바람직하다. 이유는 trgC가 맨 마지막이라면 오류가 발생했을 때 그 앞의 trgA, trgB까지 모두 롤백시켜야 하므로 시스템에 부하가 발생될 수 밖에 없다. 그러므로 오류가 발생할 거라면 차라리 맨 처음에 발생해서 롤백될 내용을 최소화 하는 것이 좋다. 