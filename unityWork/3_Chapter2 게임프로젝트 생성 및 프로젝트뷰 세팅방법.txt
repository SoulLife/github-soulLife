Chapter02 : 게임 개발 준비
이번 장에서는 3인칭 슈팅 게임을 개발하기 위한 프로젝트를 생성하고 필요한 리소스를 임포트한다. 또한 효율적인 개발을 위한 유니티 에디터의 설정을 제시한다

이책에서 개발할 게임 소개 및 개발 순서
이 책에서 개발할 게임은 3인칭 시점 슈팅(TPS, Third Person Shooting) 게임이다. 1인칭 시점 슈팅(FPS, First Person Shooting) 게임과 더불어 인기가 많은 장르의 게임으로, 주인공과 적 캐릭터가 전투를 벌이는 단순한 시나리오의 게임이다. 단순한 게임이지만 개발을 진행하면서 유니티 엔진의 기능 및 다양한 게임 제작 기법을 습득할 수 있는 장르이기도 하다. 

몇몇 독자분께서 이 책을 읽고 나면 FPS 게임을 만들수 있는지 문의한 적이 있다. 이는 FPS 게임의 인기를 방증하는 질문이다. 물론 TPS와 FPS는 비슷하기는 하나 카메라 시점의 차이가 있다. 또한 주인공을 컨트롤하는 것과 관련해서 수정할 부분이 분명히 있으나 이 책에서 진행하는 TPS 게임의 제작 기법을 충실히 소화한다면 FPS 게임을 만드는데 크게 도움이 되리라 생각한다. 

이 책에서는 게임 개발을 크게 다음 순서로 진행한다

1. 게임 개발 환경 설정
2. 게임에서 사용할 리소스 내려받기 및 설치
3. 게임의 배경이 되는 스테이지 제작
4. 주인공의 이동 및 공격 기능 구현
5. 적 캐릭터 생성 및 추적 기능 구현
6. 주인공과 적 캐릭터 간의 공격 및 피격 기능 구현
7. 게임 매니저 및 오브젝트 풀링 구현


※ 프로젝트 생성
새 프로젝트를 생성하기 위해 유니티 허브를 실행한다. 유니티 허브에서는 이전에 작업했던 프로젝트를 열거나 새로운 프로젝트를 생성할 수 있다. 또한 유니티 라이선스를 등록하는 기능을제공한다. 

이전에 작업했던 프로젝트가 있다면 프로젝트 목록이 표시된다. 여러 버전의 유니티를 설치했다면 [새로 생성] 버튼 오른쪽에 있는 삼각형 버튼을 클릭해 원하는 유니티 버전을 선택하면 된다. 이 책에서는 유니티 버전 2021.1.x을 사용한다. 

[새로 생성] 버튼을 클릭하면 템플릿, 프로젝트 이름과 저장 위치를 선택하는 창이 열린다. 

템플릿은 유니티 인터페이스와 프로젝트 옵션을 자동으로 설정하고 필요한 패키지를 미리 설치한다. 기본 값인 3D를 선택한 후 프로젝트 명을 SpaceShooter로 지정한다. 저장 위치는 프로젝트를 생성할 경로를 지정한다. 저장 경로에 한글 경로가 포함될 경우 예기치 못한 오류가 발생할 수 있다. 반드시 영문 경로의 폴더에 프로젝트를 생성하기를 권장한다. 



※ 유니티 에디터의 환경설정
유니티 에디터는 개발자가 사용하는 모니터의 크기나 개수 또는 취향에 맞게 화면 레이아웃을 자유롭게 배치할 수 있다. 다음은 유니티 에디터의 기본 레이아웃이다. 




※ 레이아웃
이 책에서는 화면 배치를 2 by 3 레이아웃으로 바꿔서 진행한다. 반드시 따라야 하는 강제사항은 아니므로 본인에게 편한 레이아웃이 있다면 원하는 레이아웃을 사용해도 무방하다. 레이아웃은 오른쪽 상단에 있는 Layout 드롭다운 메뉴에서 변경할수 있다. 

개인적 의견으로 유니티 기본 레이아웃인 Default 레이아웃은 2D 콘텐츠 개발이나 UI 작업에는 편리하지만 하이러키 뷰와 인스펙터 뷰 사이의 마우스 이동 동선이 너무 멀어서 불편하다. 




※ 프로젝트 뷰의 칼럼
프로젝트 뷰는 폴더를 계층 구조로 표현하기 위해 Two Column Layout으로 지정돼 있다. 이 또한 자신의 취향에 맞게 변경할수 있다. 프로젝트 뷰의 탭 부분에서 마우스 오른쪽 버튼을 클릭하면 다음과 같이 컨텍스트 메뉴가 나온다. 이 컨텍스트 메뉴에서 [One Column Layout]을 선택하면 프로젝트 뷰의 칼럼이 하나로 바뀐다. 




※ 프로젝트 뷰의 체계적인 관리
프로젝트 뷰는 게임 개발에 사용하는 모든 리소스가 저장되는 곳으로 개발을 진행할수록 많은 리소스가 나열된다. 처음부터 체계적으로 관리하지 않으면 나중에 리소스를 검색하거나 프로젝트를 효율적으로 관리하기가 어려워진다. 따라서 프로젝트 뷰에 임포트하는 모든 리소스는 종류에 따라 폴더로 분류해서 관리하는 방법을 권장한다. 

다음은 필자가 실제 프로젝트에서 사용하는 방식으로 숫자로 시작하는 폴더명을 사용하면 프로젝트 뷰의 폴더를 원하는 순서대로 정렬할수 있다. 프로젝트 뷰에[표2-1]과 같이 폴더를 미리 생성하고 시작하자. 물론 독자 여러분의 방식대로 진행하거나 소속 프로젝트의 관리규약이 있다면 해당 규약에 따라 진행해도 무방하다. 


폴더 명칭				분류 기준
01.Scenes			씬(Scene)를 저장한다
02.Scripts			c# 스크립트를 저장한다. 
03.Prefabs			프리팹(Prefab)을 저장한다
04.Images			텍스처 이미지 및 머터리얼(Material)을 저장한다
05.Models			3D 모델을 저장한다.
06.Sounds			오디오 파일을 저장한다
07.Animations			애니메이터 컨트롤러 및 각종 애니메이션 클립을 저장한다. 
[표2-1] 프로젝트 뷰의 폴더 생성 예시 및 분류 기준

프로젝트를 생성하면 자동으로 생성된 Scene 폴더는 F2 키(맥 : return)를 눌러 01.Scenes로 이름을 변경하고 나머지 폴더를 생성한다. 

프로젝트 뷰에 폴더를 생성하는 방법은 다음 세 가지가 있다. 

1. 메뉴에서 [Assets] > [Create] > [Folder]를 선택한다
2. 프로젝트 뷰의 컨트롤 바에 있는 [+] 버튼을 클릭한 후 [Folder]를 선택한다.
3. 프로젝트 뷰에서 마우스 오른쪽 버튼을 클릭해 팝업되는 컨텍스트 메뉴에서 [Create] > [Folder]를 선택한다. 




※ 캐릭터 모델 임포트하기
이 책에서 사용할 주인공 캐릭터는 MADFINGER Games 사에서 개발한 ShadowGun:Deadzone 게임의 에셋을 사용한다. 최근까지 에셋 스토어에서 Shadowgun: Deadzone GM's Kit 으로 무료로 공개했던 에셋이지만 아쉽게도 지금은 내려진 상태다. 이책에서는 그 ㅇ ㅔ셋 중에서 몇 가지 모델과 텍스처를 사용한다. 아직 리소스를 준비하지 못했다면 다음 깃허브 주소에서 먼저 내려받는다. 
* 깃허브 저장소 : https://github.com/IndieGameMaker/UnityBook
