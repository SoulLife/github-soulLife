※ 유니티 패키지를 통한 리소스 설치
내려받은 리소스 파일의 압축을 풀고 Resources/Models 폴더에 있는 Player.unitypackage를 더블클릭하면 다음과 같이 Import Unity Package 다이얼로그 창이 열린다. [Import]버튼을 클릭하면 리소스 파일이 유니티로 설치되며 프로젝트 뷰에서 확인할수 있다. 다른 방법으로는 패키지 파일을 프로젝트 뷰로 드래그 앤드 드롭해도 된다. 

유니티 패키지(unity package)는 유니티 내에서 사용되는 에셋과 그 에셋의 정보(메타 데이터)를 저장한 압축파일로, 확장자는 .unitypackage다. 즉, 유니티 에디터에서 선택한 여러 개의 에셋을 하나의 압축 파일 형태로 추출(Export)할수 있다. 이를 통해 나중에 해당 유니티 패키지를 임포트해 편리하게 재사용할수 있다. 

주의? 유니티 패키지 설치 시 주의 사항
유니티 패키지를 임포트할 때 유니티가 런-모드라면 설치되지 않는다. 반드시 에디트-모드 상태에서 설치해야 한다. 또한 패키지 파일을 더블클릭했을 때 유니티 허브가 실행된다면 패키지 파일을 직접 프로젝트 뷰로 드래그해서 설치한다. 유니티 허브가 실행되는 것은 일종의 버그로, macOS에서만 발생한다. 



주인공 캐릭터를 임포트한후 프로젝트 뷰에 생성된 Player 폴더를 앞서 미리 생성한 05.Models 폴더로 드래그해 옮긴다. 앞으로 게임 개발에 사용할 모든 3D 모델은 05.Models 폴더로 옮겨서 관리한다. 



※ 에셋 스토어
유니티는 품질 좋은 다양한 리소스를 사고 팔 수 있는 오픈마켓을 직접 운영한다. 에셋 스토어(AssetStore)에서는 게임 개발에 필요한 3D 모델, 텍스처, 애니메이션, 플러그인, 사운드, 심지어 완성된 프로젝트 소스 등을 구할수 있다. 최근 사운드의 경우 오케스트라를 동원해 직접 녹음한 Epic 스타일의 배경음악과 전문 성우를 동원한 Voice까지도 구할수 있다.

유니티 2019 버전까지는 유니티 에디터 내에서 직접 에셋 스토어에 접속할수 있었으나 2020 버전부터는 웹 브라우저에서 조회하고 구매하는 방식으로 변경됐다. 구매한 에셋은 유니티 에디터의 패키지 매니저(Package Manager)에서 내려받고 설치할수 있다. 


메뉴에서 [Window] > [Asset Store]를 선택하면 Asset Store 뷰가 열리고, 에셋 스토어가 접속 방식이 변경됐다는 문구가 표시된다. [Search online]버튼을 클릭하면 자동으로 웹 브라우저가 열리고 해당 사이트로 연결된다. 이때 Always open in browser from menu 체크 박스를 선택하면 앞으로는 에셋 스토어 뷰가 열리지 않고 바로 웹브라우저가 열린다. 



※ 무료 리소스 내려받기
게임 제작에 필요한 무료 리소스를 에셋 스토어에서 내려받는다. 웹 사이트 상단 검색란에서 다음 키워드로 검색하면 본 게임에서 사용할 리소스를 쉽게 찾을수 있다. 

1. Yughues Free Metal Materials("Metal Texture"로 검색)

원하는 에셋을 검색한 후 [내 에셋에 추가하기]버튼을 누르고 [Unity 에서 열기]버튼을 클릭하면 유니티의 패키지 매니저가 열린다. 맥OS를 사용하는 독자는 에셋 스토어에서 구매한 에셋이 패키지 매니저에 자동으로 표시되지 않는 버그가 있다. 따라서 패키지 매니저의 좌측 상단의 콤보박스를 클릭해 [Packages:My Assets]를 선택한 후 해당 에셋을 수동으로 검색해야 한다. 패키지 매니저 창의 오른쪽 아래의 [Download]버튼을 클릭하면 에셋을 내려받기 시작하고 완료되면 [Import] 버튼이 활성화된다. 

[Import] 버튼을 클릭하면 압축이 풀리는 과정을 거친 후 다음과 같이 Import Unity Package 다이얼로 그 창이 뜬다. 불필요한 파일이 있다면 이 창에서 선택을 해제해 임포트 목록에서 제거할수도 있다. 모두 체크한 다음 오른쪽 아래에 있는 [Import] 버튼을 클릭한다. 



2. Skybox Volume 2(Skybox Vol2로 검색)



3. Barrel

위 세가지 리소스를 모두 임포트한 후 다음과 같이 리소스 성격에 맞는 폴더로 옮긴다. 임포트한 리소스는 바로바로 폴더에 정리하는 습관을 들이기를 권장한다. 

리소스명			이동할 폴더
Metal Textures Pack	04.Images/
Skybox Volume 2		04.Images/
Barrel			05.Models/




정보? 내려받은 에셋의 저장 경로
에셋 스토어에서 내려받은 에셋은 로컬 PC에 저장되며 나중에 다시 내려받지 않고 바로 임포트할 수 있다. 에셋의 저장 경로는 다음과 같다. 
* 맥 : /Users/사용자계정명/Library/Unity/Asset Store-5.x
* 윈도우 : C:\Users\사용자계정명\AppData\Roaming\Unity\Asset Store


주의? 무료 리소스를 사용 게임에서 사용할 때의 주의사항
에셋 스토어에서 내려받은 무료 리소스를 상용 게임에 사용할 때는 반드시 라이센스를 확인해야 한다. 상용 게임에 사용할 때 별도의 라이선스를 요구하는 경우가 있으므로 라이선스와 관련한 주의사항이 있다면 반드시 확인해야 한다. 




본격적인 게임 개발에 앞서 자동으로 생성된 씬의 이름을 변경한다. 프로젝트 뷰의 01.Scenes 폴더에 있는 SampleScene을 선택하고 F2 키(맥:return)를 누르면 수정 모드가 된다. 씬 이름을 Play로 지정한다. 현재 열려있는 씬의 이름을 변경하면 리로드(Reload)할 것인지 묻는 다이얼로그가 나온다. [Reload]버튼을 클릭해 씬을 갱신한다. 



정보? 개발에 실패한 개발자는 용서해도 백업에 실패한 개발자는 용서할 수 없다. 
씬(Scene)을 저장하는 단축키(윈도우: Ctrl + S, 맥:command+S)를 이용해 자주 저장하는 습관을 들이자 빠른 개발 능력을 갖췄다고 해도 저장 또는 백업을 소홀히 하면 순식간에 소중한 작업물을 날려버리는 경우가 비일비재하다는 것을 다시한번 강조한다. 



※ 정리
이번 장에서는 게임 개발에 필요한 여러 가지 에셋을 설치했다. 유니티의 장점중 하나인 에셋 스토어에서는 많은 무료 에셋을 제공한다. 1인 개발자 또는 학생이라도 무료 에셋만 잘 활용해도 좋은 게임을 만들수 있음을 기억하자. 다음 장부터는 본격적인 게임 개발을 진행한다. 

* 이장 까지의 소스 코드 내려받기
https://github.com/IndieGameMaker/SpaceShooter2021/releases/tag/2장






CHAPTER03 : 게임 스테이지 제작
이번 장에서는 게임의 배경이 되는 스테이지를 제작한다. 유니티가 처음인 개발자에게는 다소 지루할수 있으며 잘 진행되지 않는다고 실망할 필요는 없다. 유니티가 익숙해지기 전까지는 당연히 개발 속도가 나지 않을 것이다. 하지만 조금씩 따라 하다보면 어느새 익숙해지는 단계가 반드시 온다는 것을 명심하자. 




※ 바닥 생성 및 배치
게임의 배경이 되는 스테이지를 제작할 때 맨 먼저 작업하는 것 중 하나가 바로 바닥인 Floor다. 스테이지 에 맞게 디자인된 3D 모델이 없을 때는 보통 유니티에서 제공하는 원시 모델(Primitive Model)중 Plane또는 Cube를 사용한다. 이책에서는 Plane 모델을 사용한다. Plane은 가로, 세로의 크기가 각각 10유닛, 10유닛으로 설정된 모델이다. 

메뉴에서[GameObject] > [3D Object] > [Plane]을 선택하면 씬 뷰에 Plane이 배치된다. GameObject의 대분류 메뉴는 하이러키 뷰의 컨트롤 바에 있는 [+]툴 버튼을 클릭하거나 마우스 오른쪽 버튼을 클릭하면 팝업되는 컨텍스트 메뉴에서도 동일하게 선택할수 있다. 

하이러키 뷰 또는 씬 뷰에서 Plane을 선택한 다음 인스펙터 뷰에서 Transform 컴포넌트의 Position 속성이(0, 0, 0)인지 확인한다. 
Position 값이 자동으로(0, 0, 0)으로 지정되지 않았다면 유니티 에디터의 설정을 다음과 같이 변경한다. 메뉴에서 [Edit] > [Preferences](맥:[Unity] > [Preferences[)를 선택해 Preferences 창을 연다. 왼쪽 메뉴에서 [Scene View]카테 고리를 선택한 후 [Create Objects at Origin]옵션에 체크한다. 이는 개발자가 생성하는 객체의 Position값을 항상 월드 좌표의 원점(0, 0, 0)으로 설정하는 옵션으로 유니티를 처음 접하는 개발자에게는 굉장히 편리한 기능이다. 

씬 뷰에 배치한 모든 게임오브젝트(GameObject)의 이름은 직관적인 이름으로 바꾸기를 권장한다. 방금 만든 게임오브젝트는 게임의 바닥이될 것이므로 이름을 Floor로 변경한다. 하이러키 뷰에서 해당 게임오브젝트를 선택하고 F2(맥에서는 return 키)를 누르면 수정할수 있다. 


정보? 게임오브젝트의 Transform Position X, Y, Z원점 설정
씬 뷰에 게임오브젝트를 생성하고 나면 맨 먼저 Transform 컴포넌트의 Position 속성값이 (0, 0, 0)으로 설정됐는지 확인하고 적절한 위치로 옮겨 배치하는 습관을 들이기를 권장한다. 특히 게임의 Floor는 Y축 좌표를 항상 0으로 설정하고 작업하는 것이 좌표를 계산하는 데 유리하다. 즉 어떤 객체의 Y좌표가 0보다 크다면 객체가 바닥을 기준으로 위에 있다는 것을 바로 유추할수 있다. 



지금까지 씬 뷰에 바닥을 배치했다. 현재로서는 그 바닥의 가로 X 세로의 크기가 1m X 1m 인지 아니면 10m X 10m인지 확인할수 없다. 유니티에는 기준 척도가 되는 원시 모델이 있다. 메뉴에서(pGameObject] > [3D Object] > [Capsule]을 선택해 Capsule을 생성한다. Capsule을 선택하고 인스펙터 뷰에서 Transform 컴포넌트의 Position 속성을 (0, 1, 0)으로 설정하면 다음 그림과 같이 Capsule 이 바닥에 정확히 맞닿게된다. 

이 Capsule의 높이는 유니티의 유닛(Unit)단위로 2유닛으로 디자인돼 있다. 이 캡슐의 크기를 사람의 표준 신장으로 생각하면 된다. 즉 유니티의 1유닛을 1m로 생각하고 작업하는 것이다. 이는 미터법에 익숙한 우리가 유니티의 1유닛을 1m로 생각하고 개발하는 것이 편리하기 때문에 그렇게 하는 것이지 절대적인 단위는 아니다. 

바닥으로 사용할 Floor의 크기가 사람의 크기에 비교해 너무 작으므로 스케일을 변경해 적절한 크기로 설정한다. 앞서 만든 바닥은 Plane을 사용했으며 Plane의 가로, 세로의 크기는 각각 10유닛으로 디자인돼있다. 즉 미터로 생각해본다면 10m, 10m크기의 바닥인 것이다. 

하이러키 뷰의 Floor를 선택하고 Transform의 Scale 속성을(5, 5, 5)로 변경한다. 이는 가로 x 세로의 길이를 각각 50m로 설정한 것이다.(10m*5=50m)


정보? 균등 스케일 vs 비균등 스케일
균등 스케일(Uniform Scale)은 3D 모델의(x, y, z)스케일(Scale)값이 모두 같은 값을 갖는 것을 의미한다. 즉(1, 1, 1)또는 (5, 5, 5)와 같은 것을 말한다. 반대로 비균등 스케일(Non-Uniform Scale)은 스케일의 (x, y, z)값이 다른 경우를 말한다. 비균등 스케일의 경우 정적(Static, 움직이지 않고 고정된)인 모델에는 별다른 문제가 없지만 비균등 스케일로 설정된 객체 하위에 다른 객체가 있다면 하위 객체의 회전 계산에 문제가 발생할수 있다. 따라서 스테이지 디자인을 위해 배치하는 3D 모델을 제외하고는 가능한 한 균등 스케일을 유지하는 것이 바람직하다. 





※ 텍스처
텍스처(Texture)란 3D 모델의 표면에 매핑시킬 이미지 파일을 지칭한다. 마네킹에 다양한 옷을 입힐수 있는 것처럼 3D 모델에 텍스처를 입힌다고 표현하면 이해하기 쉽다. 유니티는 PNG, JPEG, TIFF, GIF, BMP, TGA등 다양한 포맷의 이미지 파일을 지원하며, 포토샵 포맷인 PSD 파일도 지원한다. 또한 PSD파일에 있는 여러 개의 레이어(Layer)를 자동으로 평면화(Flatten)한다. 물론 원본 PSD 파일은 손상되지 않는다. 유니티는 텍스처의 원본을 보존한 상태로 다양한 압축 포맷으로 용량을 줄이는 기능을 제공하므로 원본 텍스처를 불러와 사용할수 있다. 

텍스처의 크기는 가로세로가2제곱(예:256x256, 1024x1024)형태일때 압축을 지원하며 속도가 가장 빠르다. 특히 모바일 플랫폼에서 속도를 향상시키고 싶다면 반드시 2의제곱(POT, power of two)형태의 텍스처를 사용해야 한다. 

프로젝트 뷰에서 04.Images/YughuesFreeMetalMaterials/Materials/Textures/T_10_Diffuse를 선택하면 인스펙터 뷰에서 텍스처의 세부 정보를 조회하거나 속성을 설정할 수 있다. 




※ 텍스처의 해상도 조절
위 그림에서 인스펙터 뷰 하단에 있는 프리뷰 영역에는 텍스처의 이미지와 해상도, 압축 알고리즘, 파일 크기가 표시된다. 선택한 diffuse 텍스처는 해상도가 1024x1024이고, 파일 크기는 1.3MB다. 따라서 모바일 플랫폼으로 출시를 염두에 둔다면 텍스처의 해상도를 적절히 줄여야 한다. 텍스처의 Max Size 속성을 512로 설정하고 [Apply]버튼을 클릭한다. 텍스처의 파일 크기가 341.4KB로 원본 용량 대비 약 74%줄어든 것을 확인할수 있다. 

프로젝트를 진행할 때 대상 플랫폼을 명확히 설정하고 임포트한 텍스처의 품질을 어떻게 관리할 것인지 미리 결정해야 한다. 이에 따라 프로젝트를 진행하면서 임포트하는 텍스처는 바로 적절한 품질로 설정하는 작업을 병행해야 나중에 최적화 작업에 유리하다. 



※ 머터리얼
3D 모델에 텍스처를 적용하려면 3D 모델과 텍스처 사이에 반드시 머터리얼(Material)이라는 매개체가 필요하다. 머터리얼은 3D 모델에 적용할 텍스처의 다양한 속성을 설정하는 역할을 한다. 즉 어떤 텍스처를 어떤 간격으로 반복하고 표면의 재질은 어떻게 표현하느냐 등의 속성을 설정한다. 


※ 머터리얼의 자동 적용
floor에 텍스처를 적용해보자. 먼저 텍스처를 적용하는 방법에는 두 가지가 있다. 텍스처를 임포트한 다음 프로젝트 뷰의 04.Images/YughuesFreeMetalMaterials/Materials/Textures/T_10_Diffuse 텍스처를 씬 뷰의 Floor로 드래그앤드 드롭하면 텍스처가 입혀지며 해당 텍스처가 있던 폴더에 자동으로 Materials 폴더가 생긴다. 새로 생성된 폴더를 열어보면 텍스처 파일명과 동일한 머터리얼이 생성된 것을 볼 수 있다. 

이 방식은 텍스처를 적용하는 가장 간단한 방법이지만 유니티 초보자에게 권장하는 방법은 아니다. 텍스처와 머터리얼이 여러 폴더에 산재해 있으면 나중에 프로젝트가 방대해졌을 때 관리하기가 어렵다. 또한, 텍스처가 어떤 절차를 거쳐서 메시에 연결되는지 개발자가 명확히 알고 있어야 하므로 유니티에 어느정도 익숙해질때까지는 항상 사용할 머터리얼을 직접 생성한 다음 속성을 설정하는 방식으로 작업하길 권장한다. 

프로젝트 뷰의  04.Images/YughuesFreeMetalMaterials/Materials/Textures/T_10_Diffuse에 자동으로 생성된 Materials 폴더를 삭제한다. 좀전에 Floor에 적용됐던 텍스처는 분홍색으로 변경된 모습을 볼 수 있다. 앞으로 종종 분홍색으로 변한 3D 모델을 보게 될 것이다. 이처럼 분홍색으로 변한 3D 모델은 3D 모델에 텍스처를 저장하고 있는 머터리얼이 연결되지 않았거나 끊어졌다는 것을 의미한다. 

하이러키 뷰 또는 씬 뷰에서 Floor를 선택하고 인스펙터 뷰의 Mesh Renderer 컴포넌트를보면 Materials > Element 0 속성이 Missing(Material)으로 표시된 것을 볼 수 있다. Missing이라는 단어에서 유추할수 있듯이 이전에 머터리얼이 연결돼 있다가 해당 머터리얼이 삭제되어 연결이 끊어졌다는 것을 말한다. 