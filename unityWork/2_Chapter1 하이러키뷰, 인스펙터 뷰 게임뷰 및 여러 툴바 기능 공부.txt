3. 하이러키 뷰
하이러키 뷰(Hierarchy View)는 씬 뷰에 배치한 모든 객체를 계층 구조로 나열해서 보여준다. 씬 뷰에서 마우스로 클릭해 선택하기 어렵거나 찾기 어려울 때도 하이러키 뷰에서 쉽게 선택할 수 있다. 또는 컨트롤 바의 검색 기능을 이용할 수도 있다. 

하이러키 뷰에 나열된 요소는 모두 게임오브젝트다. 게임오브젝트는 씬 뷰에 가져다 놓을수 있는 모든 것을 의미하며, 유니티에서 가장 기본이되는 단위를 말한다. 하이러키 뷰는 게임오브젝트를 다른 게임 오브젝트로 드래그 앤드 드롭해 차일드화할수 있는 기능이 있다. 이 기능을 페어런팅(Parenting)이라 한다. 

이처럼 그룹화된 게임오브젝트는 페어런트(Parent) 게임오브젝트가 이동하면 함께 움직이는 특성이 있다. 또한, 페어런트 게임오브젝트의 레이어(Layer)를 상속받는다. 

하이러키 뷰의 정렬은 두 가지를 제공한다. 

※ Transform Sort : 생성된 순서로 정렬
※ Alphabetical Sort : 알파벳 순서로 정렬

하이러키 뷰의 기본 정렬 방식은 Transform Sort이며, 게임 오브젝트가 생성된 순서대로 정렬된다. 또한 원하는 위치로 이동시켜 드래그해 배치할수 있다. 특히 UI 항목 간의 화면에 표시되는 Z-Order의 우선순위가 된다. 알파벳 정렬로 바꾸려면 Preference 창에서 "Enable Alphanumeric Sorting 옵션을 활성화한다. 

알파벳 정렬 옵션을 활성화하면 하이러키 뷰의 컨트롤 바에 정렬 옵션 툴 버튼이 표시되어 쉽게 정렬 방식을 바꿀수 있다. 

하이러키 뷰에 특정 게임오브젝트를 선택할수 없도록 하는 락킹(Locking) 기능과 시각적으로 표시하지 않는 룩(Look) 기능이 추가됐다. 락킹 기능을 체크하면 씬 뷰에서 마우스 클릭으로 특정 게임오브젝트를 선택할수 없고 반드시 하이러키 뷰의 해당 게임오브젝트를 클릭해야만 선택된다. 락킹이라고 해서 이동을 할 수 없다는 것은 아니고 단순히 씬 뷰에서 선택할수 없도록 하는 기능이다. 

시각적으로 표시하지 않는 기능은 씬 뷰에 렌더링하지 않는 것으로 레이어 마스크를 설정하지 않아도 잠시 해당 게임오브젝트를 꺼두고 작업을 진행할 때 유용하게 활용할 수 있다.





4. 인스펙터 뷰
인스펙터 뷰(Inspector View)는 씬 뷰, 하이러키 뷰 또는 프로젝트 뷰에 선택된 게임오브젝트와 에셋의 속성을 보여주는 뷰로서 해당 속성을 조회하거나 수정할 때 사용한다. 같은 속성에 한해 동시에 여러 개의 게임오브젝트를 선택하고 인스펙터 뷰에서 수정할수 있다. 

인스펙터 뷰는 임포트한 에셋을 선택하면 해당 에셋의 유형에 따라서 다양한 인터페이스로 변경된다. 다음은 텍스처 파일을 선택했을 때 텍스처의 세부정보를 조회하고 설정값을 수정할수 있도록 변경된 인터페이스다. 




5. 게임 뷰
게임 뷰(Game View)는 개발 진행 중에 게임을 실행해 미리 볼 수 있는 뷰로서, 씬 뷰에 있는 메인 카메라의 시야로 렌더링해서 보여준다. 해당 프로젝트를 빌드해서 실행하거나 모바일에서 구동할 때 보이는 화면과 동일하다. 또한 게임 뷰에 있는 컨트롤 바의 해상도를 선택하면 다양한 해상도로 볼 수 있다. 

게임 뷰는 빌드할 대상 플랫폼으로 시뮬레이션해 볼 수 있다. 게임 뷰 왼쪽 위의 [Game] 버튼을 클릭해 [Simulator]로 선택하면 다양한 모바일 플랫폼을 선택해 해당 플랫폼으로 빌드했을 때의 화면을 미리 확인해 볼 수 있다. 또한 오른쪽의 Rotate 기능을 통해 화면을 회전시킬 수 있다. 


6. 콘솔 뷰
콘솔 뷰(Console View)는 디버깅 시 로그를 출력하는 뷰로서, 출력하는 메시지는 정보(Information), 경고(Warning), 오류(Error)로 분류해 메시지 타입별로 필터링해 출력할수 있다.

콘솔 뷰는 개발 시 자주 보는 뷰이므로 꼭 단축키를 기억해 두자(macOS : command + Shift + C, 윈도우: Ctrl + Shift + C)또한 에러 메시지가 여러 개 표시될 경우 맨 위에 있는 에러 메시지부터 해결해야 한다. 


주의! 항상 켜야하는 Error 메시지 필터와 Error Pause 기능
특별한 경우가 아니고서는 오류 메시지의 필터링은 해제하지 않는다. 오류 메시지 필터링이 해제된 상태에서는 콘솔 뷰에 오류 메시지가 출력되지 않기 때문에 에러 메시지를 놓치는 경우가 번번히 발생하기 때문이다. 또한 Error Pause 버튼을 선택하면 사소한 에러에도 일시 정지가 걸려 테스트하기가 어려울 수 있다. 따라서 최종 테스트가 아닌 경우에는 Error Pause 기능은 비활성화하고 진행하기를 권장한다. 




툴 바의 기능
1. 툴 버튼
유니티 툴 버튼은 게임 디자인 작업 시 가장 자주 사용하는 기능이므로 단축키를 기억해 두는 편이 좋다. 단축키는 왼쪽부터 Q, W, E, R, T, Y다. 

* View 툴 버튼 : Hand 툴 버튼이라고도 부르며, 이 버튼을 클릭하면 마우스 커서가 손모양으로 바뀌며 씬 뷰의 화면을 이동시킬수 있다. 

* Move 툴 버튼 : 선택한 게임오브젝트의 3차원 좌표축(Transform)이 표시되며 해당 축을 클릭하고 드래그하면 해당 축 방향으로 이동시킬수 있다. 

Move 툴 버튼을 클릭하고 게임오브젝트를 선택하면 해당 게임오브젝트의 원점 좌표(피벗:Pivot)에 3개의 좌표축이 표시된다. 빨간색 축은 X축, 녹색축은 Y축, 파란색은 Z축을 의미한다. 유니티는 왼손좌표계를 사용하기 때문에 +Z축 방향이 전진방향이고 +X축 방향이 오른쪽 방향을 의미한다. +Y축은 당연히 위쪽을 의미한다. 앞으로 여러분들은 해당 축의 색상만 보고도 어떤 축인지를 바로 알아야 한다. 색상에 대응하는 축을 기억할 때는 RGB(Red, Green, Blue)순서대로 XYZ가 대응된다고 생각하면 쉽게 기억할수 있을 것이다. 


*Rotate 툴 버튼 : 선택한 객체를 회전시킨다. 
Rotate 툴버튼을 클릭하면 해당 게임오브젝트의 피봇 좌표를 기준으로 세 개의 원이 표시된다. 각 원은 RGB 색상으로 표시된다. 각 원의 색상은 어느 축을 기준으로 회전할지를 나타낸다. 만약 녹색 원을 클릭하고 드래그하면 Y축을 기준으로 회전한다는 것을 의미한다. 원을 마우스로 클릭한 후 윈도우 Ctrl(macOS:command)키를 누른채 회전시키면 스냅(Snap)설정 각도 단계로 회전할 수 있으며 식별하기 편리하게 눈금자가 표시된다. 기본 스냅의 설정 각도는 15도 이다. 


*Scale 툴 버튼 : 선택한 객체의 스케일을 변경한다. 


* Rect 툴 버튼 : 선택한 UI 객체의 이동 회전 스케일을 변경한다. 

* Transform 툴 버튼 : 선택한 객체의 이동, 회전, 스케일을 모두 변경한다. 



팁!! 마우스와 키보드 조합의 씬 뷰 조작 기능
마우스 휠 스크롤
씬 뷰를 확대/축소한다

macOS: option + 마우스 왼쪽 버튼, 윈도우 : alt + 마우스 왼쪽버튼
씬 뷰의 화면 중심을 기준으로 회전하는 기능

macOS: option + command + 마우스 왼쪽 버튼, 윈도우 : Ctrl + Alt + 마우스 왼쪽 버튼
씬 뷰의 화면 중심을 이동하는 기능(이동 툴 버튼과 동일한 기능)

마우스 오른쪽 버튼 + (W/A S/D, Q/E)
마우스 오른쪽 버튼을 클릭하고 드래그하면 시야각이 변하며 키보드 W, A, S, D 키로 이동할수 있다. FPS 게임의 주인공 조작법과 같다. Q키는 아래로 내려가고 E키는 위로 올라간다. 또한 Shift 키를 함께 누르면 속도가 빨라진다. 


macOS : option + 마우스 오른쪽 버튼, 윈도우 : Alt + 마우스 오른쪽 버튼
option/alt 키를 누르고 마우스 오른쪽 버튼을 클릭한 상태로 드래그하면 씬 뷰의 화면이 확대/축소된다(마우스 휠 스크롤과 동일한 기능)


Alt + 마우스 오른쪽 버튼 + 마우스 이동
씬 뷰를 확대/축소 한다




2. 피봇 / 센터
피봇 툴 버튼은 선택한 3D 모델의 중심 좌표를 어떻게 표시할 것인가에 대한 옵션이다. 토글 방식으로 Pivot/Center로 전환된다. Pivot으로 설정하면 3D 모델링 툴에서 모델링할 때 설정한 원점 좌표에 좌표축의 원점이 표시되며 Center로 설정하면 3D 모델의 원래 원점 좌표는 무시되고 해당 3D 모델의 중앙에 좌표축을 표시한다. 단축키는 Z키이며 실행시 영향을 미치지는 않는다. 

유니티에서 제공하는 기본 모델(primitive Model : Cube, Sphere, Capsule, Cylinder, Plane, Quad)의 경우 피봇과 센터 옵션을 선택해도 항상 가운데에 좌표축이 표시된다. 유니티에 익숙해지기 전까지는 항상 Pivot으로 설정하고 작업하는 것을 원칙으로 한다. 특별한 경우가 아니고서는 Center로 작업할경우가 거의 없다.




3. 로컬/글로벌
로컬/글로벌(Local/Global)툴 버튼은 선택한 게임오브젝트의 좌표축을 로컬 좌표(Local Coordinate)또는 글로벌 좌표(Global Coordinate)로 표시하는 옵션으로, 토글 방식으로 전환된다. 씬 뷰는 무한대로 확장할 수 있는 3차원 공간으로, 기준이 되는 좌표를 글로벌 좌표라 한다. 씬 뷰의 오른쪽 상단에 있는 십자가 모양의 기즈모(Gizmo)가 글로벌 좌표축을 표시한다. 

아래 그림은 3D 모델을 Y축을 기준으로 -45도 회전시킨후 좌표계를 변경시킨 화면이다. 로컬 좌표를 -45도 회전시켰지만 글로벌 옵션으로 선택하면 표시되는 좌표축은 씬 뷰에 있는 글로벌 좌표축과 동일하게 표시된다. 단축키는 키보드 X 키이며, 실행시 영향을 미치지는 않는다. 


Q 정보 : 글로벌 좌표와 로컬 좌표
글로벌 좌표(Global Coordinate)는 3차원 공간의 절대 좌표를 의미하며, 변하지 않는 기준 좌표다. 반면 씬 뷰에 있는 개별 게임오브젝트는 자신만의좌표를 갖고 있다. 이것을 로컬 좌표라한다. 




4. Play/Pause/Step
유니티 에디터의 툴 바 가운데에 배치된 Play/Pause/Step 버튼은 굳이 설명하지 않아도 될 정도의 직관적인 버튼이다. Play 버튼을 클릭하면 유니티는 런 모드(Run Mode)로 변경되고 구현한 로직을 실행한다. 버튼의 색상이 청색으로 변경되낟. 다시 Play 버튼을 클릭하면 에디트 모드(Edit Mode)로 변경된다. Pause 버튼은 일시정지 기능이고, Step 버튼은 한 프레임 단위로 끊어서 실행하는 기능이다. 자주 사용하는 버튼이기 때문에 반드시 단축키를 기억하기를 권장한다. 

* Play : Ctrl + P(macOS : command + P)
* Pause : Ctrl + Shift + P(macOS : command + Shift + P)
* Step : Ctrl + Alt + P(macOS : command + Alt + P)



5. 검색
유니티 프로젝트의 규모가 커질수록 임포트한 리소스가 많아지는데 이때 효율적인 검색을 할수 있도록 하는 기능이다. 검색 결과 목록을 클릭하면 미리보기 창에서 조회하거나 선택할수 있는 기능을 제공한다. 단 축키는 Ctrl + K(macOS : command + K) 로 호출할 수 있다. 



6. 콜라보레이트
콜라보레이트(Collaborate) 기능은 유니티사에서 제공하는 협업 시스템의 일부이다. 다수의 개발자간의 소스 공유를 통해 프로젝트를 진행할수 있는 기능으로 프로젝트 용량이 1GB 까지는 무료로 사용할수 있으며 유료로 전환할 경우 25GB 용량을 제공한다. 

Q정보 : 유니티 팀즈 서비스
협업을 위한 유니티 팀즈에 대한 자세한 내용을 다음 주소에서 확인할 수 있다. 
https://unity.com/kr/unity/features/collaborate




7. 서비스
유니티 서비스(Unity Services) 툴 버튼은 유니티사에서 제공하는 여러 가지 서비스 정보를 유니티 에디터에서 직접 확인할수 있다. 유니티 서비스 툴 버튼을 클릭하면 서비스 뷰가 열리며 Ads, Analytics, Collaborate, Performance Reporting, In-App Purchasing, Cloud Build, Multiplayer 관련 내용을 조회하거나 설정하는 기능을 제공한다. Go to Dashboard를 클릭하면 해당 서비스의 상세 정보를 웹 페이지에서 조회하거나 설정할수 있다. 



8. 계정
유니티 개발자 계정을 변경하거나 개발자 계정 정보를 조회할수 있는 페이지로 이동하는 기능을 제공한다. 


9. 레이어
씬 뷰에 배치된 모든 게임오브젝트는 레이어(Layer)를 지정할수 있다. 툴 바의 레이어 옵션은 특정 레이어만 선택적으로 씬 뷰에 표시할수 있다. 


10. 레이아웃
유니티는 뷰의 배치를 자유롭게 할 수 있는 기능을 제공한다. 툴 바의 오른쪽 상단에 있는 레이아웃(Layout)옵션을 클릭하면 여러 형태의 레이아웃을 드롭다운 메뉴에서 선택할수 있다. 독자 여러분이 선호하는 레이아웃이 있다면 그 레이아웃을 저장하면 레이아웃 드롭다운 메뉴에 표시된다. 




※ 단축키 설정
마우스 커서를 특정 뷰에 두고 Shift + Space키를 누를 때마다 해당 뷰가 최대화/최소화한다. 참고로 이 단축키는 Space 단축키였지만 Timeline Play의 단축키로 지정되어 Shift + Space 키 조합으로 바뀌었다. 

유니티의 단축키는 Shortcuts 창에서 설정할수 있다. (macOS : [Unity] > [Shortcuts...], 윈도우 : [Edit] > [Shortcuts...],)뷰를 최대화/최소화하는 단축키를 원래 단축키였던 Space키로 변경해본다. Category에서 Window를 선택한 후 Command 목록에 Maximaze View를 선택한다. Shortcut에 할당된 Shift + Space를 더블클릭해 스페이스 키를 누르면 새로운 키가 단축키로 설정된다. 

다른 단축키와 충돌이 있다면 팝업이 뜨면[Reassign]버튼을 클릭해 강제 할당한다. 앞으로 자주 사용하는 메뉴의 단축키가 없다면 이 창에서 직접 설정해 사용할수 있다. 필자의 경우 [Project Settings...]메뉴의 단축키를 Ctrl + T(Command + T)로 정의해두고 유니티를 사용한다. 





정리
1장에서는 유니티 게임 엔진의 전반적인 특징과 인터페이스에 대해 알아봤다. 유니티 인터페이스에 익숙해지는 가장 빠른 방법은 단축키를 숙지하는 것이다. 1장에서 언급한 단축키 외에도 많은 단축키가 있으므로 조금씩 익혀나가기를 권장한다. 