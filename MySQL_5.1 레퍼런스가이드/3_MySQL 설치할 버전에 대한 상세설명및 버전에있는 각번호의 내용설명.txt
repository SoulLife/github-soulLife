2.1.2.1 설치할 MySQL 버전 선택하기
가장 처음으로 결정해야 할 것은 상용 엔터프라이즈 제품(가장 안정적임)을 사용할 것인지 또는 개발 릴리즈판을 사용할 것인지를 결정하는 것이다. MySQL 개발 과정에는 여러 개의 릴리즈 시리즈가 공존하는데, 각각의 시리즈는 서로 다른 완성도를 가지고 있다. 

* MySQL 5.1은 현재 안정화(제품화 됨)된 릴리즈 시리즈이다. 새로운 버전들은 오류 해결(bug fix)문제에 관련해서만 출시되고 있다. 새로운 기능이 추가되거나 안정화에 영향을 주는 것들은 포함되지 않는다. 

* MySQL 4.1는 이전에 발표된 안정화(제품화 됨)된 릴리즈 시리즈이다. 새로운 릴리즈는 치명적인 오류 해결 및 보안 문제 해결의 경우에만 출시된다. 새로운 기능이 이 시리즈에 추가되지는 않는다. 

* MySQL 4.0및 3.23은 이전에 안정화(제품화 됨)를 이룬 릴리즈 시리즈이다. 이 버전들은 현재는 활동을 하고 있지 않으며, 따라서 새로운 버전은 정말로 심각한 버그가 발생할 경우에만 발표된다(주로 보안 문제)

우리는 계속 오류를 해결해야 하고 여러 가지 다른 해결도 진행해야 하기 때문에 완벽하게 코드를 완료하였다고는 생각하지 않는다. 다소 확인(Confirmation)된 이라는 표현을 사용해서 우리는 현재의 안정화된 제품 내에 어떤 것도 영향을 받지 않는 미미한 것들은 추가할 수 있다. 물론 이전 시리즈에 관련된 오류 해결(bugfixes)은 이후 버전에서 계속 진행된다. 

일반적으로 처음으로 MySQL을 시작하거나 또는 아직 바이너리 배포판이 깔려 있지 않은 시스템에 이것을 설치하고자 할 경우에는 우리는 안정적인 제품을 먼저 사용하기를 권장한다. 현재 제품으로는 MySQL 5.1이 있다. 모든 MySQL 릴리즈는 비록 개발 단계 시리즈라 하더라도, MySQL 벤치 마크와 함께 검사 되며, 출시되기 전에 광범위한 테스트를 거치게 된다. 

이전 버전 시스템을 구동하고 있으며 시스템을 중단하지 않은 채로(non-seamless)새로운 버전으로 업그레이드를 하고자 한다면 현재 사용하고 있는 동일 릴리즈 시리즈의 최신 버전으로 우선 업그레이드해야 한다(버전 숫자의 맨 마지막 숫자가 최신 버전을 말함) 우리는 해당 버전의 안정적인 변경에 관련된 부분에 해당하는 치명적인 오류만을 수정한다. 

현재 제품화된 릴리즈에는 포함되지 않은 기능들을 사용하고자 한다면, 개발 단계에 있는 시리즈를 사용하면 된다. 개발 단계의 시리즈는 제품화된 시리즈보다는 안정적이지 못하다는 점을 유의한다. 

모든 패치(patches)와 오류 해결이 포함된 가장 최신의 소스를 사용하고자 한다면 비트키퍼(BitKeeper)저장소에 있는 것 중의 하나를 사용하면 된다. 여기에 있는 것은 아직 발표(release)된 것은 아니지만, 향후에 발표될 릴리즈 시리즈의 코드를 미리 검토할 수는 있을 것이다. 

MySQL의 명명 계획(naming scheme)은 세 개의 숫자와 하나의 접미사로 이루어진다. 예를 들면 mysql-5.1.12-beta 릴리즈 내부에 포함된 숫자들은 다음과 같이 해석된다. 

* 처음 숫자(5)는 주요 버전을 의미하며 파일의 포맷을 나타낸다. 모든 MySQL 5 릴리즈는 동일한 파일 포맷을 갖는다. 

* 두 번째 숫자(0)는 릴리즈 레벨이다. 주요 버전 번호와 함께 사용되면 릴리즈 시리즈 번호가 된다. 

* 세 번째 숫자(12)는 릴리즈 시리즈에 있는 버전 번호이다. 이것은 새로운 버전이 출시될 때마다 더해진다. 일반적으로 최신의 릴리즈 버전을 사용하고자 할 것이다. 

사소한 부분에 대한 업데이트의 경우에는 버전 문자열의 마지막 숫자가 증가한다. 중요한 새로운 기능이 추가되거나 또는 이전 버전과 다소 호환성이 떨어지는 경우에는 두 번째 번호가 증가한다. 파일 포맷이 변경될 경우에는 첫 번째 번호가 증가한다. 

또한 릴리즈 이름은 발표되는 버전의 안정성을 나타내는 접미사를 갖게 된다. 하나의 시리즈 안에 있는 릴리즈는 접미사 셋을 통해 얼마나 안정화를 이루고 있는지를 나타낸다. 사용 가능한 접미사는 다음과 같다. 

* 알파(alpha)는 아직 전체적으로 테스트를 진행하지 않은 새로운 기능이 포함되어 있음을 나타낸다. 알려진 오류는 뉴스 섹션에 문서로 정리된다. 대부분의 알파 버전에서는 새로운 명령어와 확장 기능들이 구현된다. 주요 코드 변경이 포함될 수 있는 실제 개발 과정은 알파 버전에서 이루어진다. 하지만 이 버전 역시 발표하기 전에 먼저 테스트를 진행한다. 

*베타(beta)는 새로운 기능들이 완성되었음을 의미한다. 주요 기능들은 새롭게 추가되지는 않는다. 여기에는 알려진 치명적인 오류는 없다. 적어도 한달 동안에는 치명적인 오류가 보고되지 않고 이전에 구현시킨 기능들을 신뢰하지 못하게 할 정도의 새로운 기능을 추가할 계획이 없는 경우에 알파에서 베타로 버전을 변경시킨다.  모든 API, 외부적으로 보여지는 구조, 그리고 SQL 명령문에 대한 컬럼은 향후의 베타 버전, 릴리즈예정판, 또는 제품 릴리즈에서는 변경되지 않는다. 

* 알씨(rc)는 릴리즈 후보를 나타낸다. 즉 일정 기간 동안 아무런 문제없이 잘 구동되는 베타 버전을 의미한다. 단지 작은 부분의 해결만 추가된다(릴리즈 후보는 이전에는 감마(gamma)릴리즈로 알려졌다)

* 접미사가 없다면 그 버전은 일정 기간 동안 다양한 사이트에서 플랫폼 관련 오류가 아닌 다른 치명적인 반복 오류가 보고되지 않은 버전을 가리킨다. 단지 치명적 오류 해결(bugfixes)만 적용된다. 이것은 우리가 제품(안정함)이라고 부르는 것이며 또는 General Availability(GA)릴리즈판이라고 부르는 것이다. 

MySQL은 대부분의 다른 제품과는 다소 차이가 있는 명명 계획(naming secheme)을 사용한다. 일반적으로는 어떠한 버전도 여러 주간 이상 동일 릴리즈의 새로운 버전으로 변경되지 않으면 사용하기에 안정적이라고 여겨진다. 

MySQL 의 모든 릴리즈는 우리의 표준 테스트와 벤치마크를 거침으로서 사용하기에 상대적으로 안정적이라는 것을 검증하게 된다. 표준 테스트는 이전에 발견된 모든 오류를 검사하도록 계속 확장 되어지기 때문에 테스트 슈트(suite)는 보다 효과적인 상태를 유지하게 된다. 

모든 릴리즈는 적어도 아래의 툴을 사용해서 테스트 된다. 

* 내부 테스트 슈트
mysql-test 디렉토리는 광범위한 테스트 케이스를 갖고 있다. 우리는 가상으로 모든 서버 바이너리에 대해 이 테스트를 진행한다. 

* MySQL 벤치마크 슈트
이 슈트는 컬럼 쿼리의 범위를 테스트한다. 이것은 또한 최신의 최적화 배치(batch)가 실제로 코드를 보다 빠르게 진행시키는지에 대해서도 검사를 한다. 

* crash-me 테스트
이 테스트는 데이터 베이스가 지원하는 기능이 무엇이며, 그 기능의 제약 사항은 무엇인지를 알아내기 위한 것이다. 