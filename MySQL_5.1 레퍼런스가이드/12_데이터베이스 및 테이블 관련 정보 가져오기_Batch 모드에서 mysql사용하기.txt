3.4 데이터베이스 및 테이블 관련 정보 가져오기
데이터베이스 또는 테이블 이름을 잊었거나 또는 주어진 테이블의 구조(예를 들면 컬럼 이름이 무엇인지)를 모른다고 할 경우에는? MySQL은 이러한 문제를 처리할 수 있는 명령문을 통해 데이터 베이스와 테이블에 대한 정보를 보여준다. 

앞에서 SHOW DATABASES를 보았는데 이것은 서버가 관리하는 데이터 베이스를 목록으로 보여준다. 어떤 데이터베이스가 현재 사용되고 있는지 보기 위해서는 DATABASE() 함수를 사용한다. 

mysql>SELECT DATABASE();

아직 아무런 데이터 베이스를 선택하지 않았다면 결과는 NULL이 된다. 

디폴트 데이터 베이스가 가지고 있는 테이블이 무엇인지를 보기 위해서는(예를 들면, 테이블 이름에 대해확신이 없다면) 다음의 명령어를 사용한다. 

mysql>SHOW TABLES;

이 명령문이 만든 결과 값의 컬럼 이름은 항상 Tables_in_db_name 형태가 되는데, 여기에서 db_name은 데이터베이스 이름이 된다. 

테이블 구조를 알고 싶다면 DESCRIBE 명령어가 유용하다. 이 명령어는 각 테이블 컬럼 정보를 알려준다. 

mysql>DESCRIBE pet;

Field는 컬럼 이름을 나타내며, Type은 컬럼에 대한 데이터 타입, NULL은 컬럼이 NULL 값을 가지고 있는지를 표시하며, Key는 컬럼의 인덱싱 상태, 그리고 Default는 컬럼의 디폴트 값을 지정하는 것이다. Extra는 컬럼의 특수 정보를 표시한다. 예를 들면 컬럼을 AUTO_INCREMENT 옵션으로 생성하였다면 이것이 여기에 나오게 된다. 

DESC는 DESCRIBE의 단축형이다. 

테이블이 인덱스를 가지고 있다면 SHOW INDEX FROM tbl_name은 인덱스 정보를 보여준다. 




3.5 Batch 모드에서 mysql 사용하기

지금까지는 mysql을 사용해서 쿼리를 입력하고 그 결과를 볼 수 있는 방법을 설명하였다. 이제 mysql을 배치모드에서 사용하는 방법을 알아보도록 한다. 이렇게 사용하기 위해서는 명령어를 구동시키고 싶은 파일 안에 기록해 놓은 다음에 mysql이 이 파일에서 입력값을 읽어 오도록 명령하면 된다. 

shell>mysql < batch-file

윈도우 환경에서 mysql를 구동시킬 때 파일 안에 문제를 일으키는 특수문자가 있는 경우에는 아래의 것을 실행한다 

C:/>mysql -e "source batch-file"

명령어 라인에서 연결 파라미터를 지정하고자 할 경우의 명령어는 다음과 같이 된다. 

shell>mysql -h host -u User -p < batch-file
Enter password: *******

이런 방식으로 mysql을 사용할 때에는 스크립트 파일을 하나 만든 다음에 스크립트를 실행시키도록 한다. 

스크립트 안에 있는 명령어 중에 하나가 에러를 발생시킨다고 하더라도 스크립트를 계속 진행시키고자 한다면 --force 명령어 라인 옵션을 사용해야 한다. 

왜 스크립트를 사용해야 하는가? 여기에 몇 가지 이유가 있다. 

* 하나의 쿼리를 반복적으로 사용하는 경우라면(즉 내일 또는 매주) 스크립트를 사용함으로써 매번 반복적으로 동일쿼리를 입력하는 것을 피할수 있다. 

* 이미 있는 유사한 스크립트 파일을 복사하고 편집해서 새로운 쿼리를 만들 수 있다. 

* 배치 모드는 쿼리를 개발할 경우에 유용한데, 특히 다중 라인 명령어 또는 다중 명령어 시퀀스를 위한 것을 개발할 때 유용하다. 실수를 한다고 하더라도 모든 것을 다시 타이핑할 필요가 없다. 간단히 스크립트를 수정해서 에러를 바로 잡은 다음에 mysql이 이것을 다시 실행하도록 하면 된다. 

* 대용량의 결과를 만들어 내는 쿼리를 가지고 있다면 화면에 스크롤 되는 결과를 얻는 것보다는 종이에 출력을 얻는 것이 나을 것이다. 

shell>mysql < batch-file \more

* 향후 진행을 위해서 파일로 결과를 보낼 수 있다. 

shell>mysql <batch-file> mysql.out

* 작성한 스크립트를 다른 사람에게 전달해서 그 사람들이 여러분과 동일한 명령어를 실행하도록 할 수 있다. 

* 어떤 상황에서는 상호 교류 동작(interactive)을 할 수 없는데, 예를 들면 cron 작업을 통해서 쿼리를 구동 시킬 경우에는 반드시 배치 모드를 사용해야 한다. 

디폴트 결과 포맷은 배치 모드에서 mysql을 사용할 때와 상호 교류 동작을 사용할 때가 다르게 나타난다. 예를 들면 SELECT DISTINCT species FROM pet은 mysql이 상호 교류적으로 구동할 때 다음과 같이 나온다. 

하지만 배치 모드에서는 다음과 같이 결과가 나온다. 

배치 모드에서 상호 교류적인 결과값 포맷을 얻고자 한다면 mysql -t를 사용한다. 실행된 명령문에 결과값을 다시 돌려 보내고 싶다면 mysql -vvv를 사용한다. 

또한 source 또는 \ 명령어를 사용해서 mysql 프롬포트상에서 스크립트를 사용할 수 있다. 