3.3 데이터베이스 생성하기 및 사용하기

일단 명령어를 입력하는 방법을 알게 되었다면 데이터 베이스에 접근할 준비가 된 것이다. 

집에서 여러 가지의 애완 동물을 기르고 있고 그것들에 대한 여러 가지 정보를 관리하고 싶다고 가정하자. 테이블을 생성하고 데이터를 넣고 필요한 정보를 읽음으로써 정보를 관리할 수 있게 되는 것이다. 이 섹션에서는 이러한 것을 할 수 있는 방법에 대해서 설명을 하고 있다. 

* 데이터 베이스 생성

* 테이블 생성

* 테이블로 데이터 넣기

* 여러 가지 방법으로 데이터를 읽어오기

* 다중 테이블 사용하기

애완 동물 데이터 베이스는 간단한 것이지만, 현실 세계에서 사용되는 비슷한 유형의 데이터 베이스를 생각하는 것은 그리 어려운 일이 아니다. 예를 들면, 이와 같은 유형의 데이터베이스는 농부가 자신의 가축을 관리하는데 사용할 수 있거나, 수의사가 병든 가축들의 이력을 관리하기 위해서도 사용할 수 있다. 이 다음의 섹션에서 사용되는 쿼리와 샘플데이터가 있는 동물 관리용배포 판은 MySQL 웹 사이트에서 쉽게 얻을 수 있다. 

이것들은 tar(http://www.mysql.com/Downloads/Contrib/Examples/menagerie.tar.gz) 및 집(ZIP)(http://www.mysql.com/Downloads/Contrib/Examples/menagerie.zip)형태로 되어 있다. 

현재 서버에 어떤 데이터 베이스가 있는지 알기 위해서는 SHOW 명령문을 사용한다. 

mysql>SHOW DATABASES;

mysql 데이터 베이스는 사용자 접근 권한을 나타내는 것이다. test 데이터 베이스는 사용자가 무언가를 테스트 할 수 있도록 제공되는 것이다. 

SHOW DATABASES 권한이 없다면 원하는 데이터 베이스를 보지 못할 것이다. 

test 데이터 베이스가 있다면 접속해 보도록 한다. 

mysql>USE test

QUIT과 마찬가지로 USE는 세미콜론을 사용하지 않는다(이러한 명령문들을 세미콜론으로 종료하는 것도 가능하기는 하다)USE 명령문을 사용할 때에는 주의사항이 하나 있다. 이 명령문은 단일 라인에서만 사용해야 한다. 

예제에서와 같이 test 데이터 베이스를 사용할 수 있겠지만 생성한 데이터들은 다른 누군가에 의해 삭제될 수 있다. 이러한 이유로 MySQL 관리자에게 여러분만의 데이터베이스를 사용할수 있는 권한을 요청해야 할 것이다. menagerie를 불러오고 싶다고 가정하자. 관리자는 다음과 같은 명령어를 실행해야 할 것이다. 

mysql>GRANT ALL ON menager ie.* TO 'your_mysql_name'@'your_client_host';

your_mysql_name은 등록한 사용자 이름이며 your_client_host는 서버에 접속하고 있는 호스트 이름이 된다. 


3.3.1 데이터베이스 생성하기 및 선택하기

관리자가 사용자를 위해 권한을 설정할 때 데이터베이스도 함께 생성하였다면 그것을 사용할 수 있다. 그렇지 않으면 사용자 스스로 그것을 생성해야 한다. 

mysql> CREATE DATABASE menagerie;


NOTE:
데이터 베이스를 생성할 때 ERROR 1044(42000): Access denied for user 'month'@'localhost' to databases 'menagerie'와 같은 에러가 나온다면 사용자 계정에 데이터베이스를 생성 하기 위한 충분한 권한이 설정되지 않았음을 의미하는 것이다. 이럴 경우에는 관리자와 상의를 하거나 Section 5.7"MySQL 접근 권한 시스템"을 참조하기 바란다. 


유닉스 환경에서는 데이터 베이스 이름의 대소 문자를 구분하기 때문에 (SQL 키워드와는 달리), 반드시 데이터 베이스 이름을 manegerie로 해야 한다. Menagerie, MENAGERIE또는 다른 변형된 형태를 사용하지 말기 바란다. 이것은 테이블 이름에서도 동일하게 적용된다(윈도우에서는 이러한 제약 사항이 없지만 여러 가지 이유로 인해 데이터베이스를 생성할 때 사용한 문자 크기와 동일한 것을 사용하는 것이 좋다)

데이터베이스를 생성하는 것이 데이터베이스를 선택하는 것을 의미하는 것은 아니다. 데이터 베이스는 명확하게 선택하도록 한다. menagerie를 현재의 데이터 베이스로 만들기 위해서는 이 명령어를 사용한다. 

mysql>USE menagerie

데이터베이스가 일단 생성되었다고 하더라도 그것을 사용하기 위해서는 mysql 세션을 시작할 때 마다 선택해야 한다. 예제에서 보았듯이, 데이터베이스 선택은 USE 명령문을 사용하면 된다. 다른 방법으로는 mysql을 호출할 때 명령어 라인에서 데이터베이스를 선택하는 것이다. 입력하고 자 하는 연결 파라미터 다음에 데이터베이스 이름을 입력하기만 하면 된다. 

shell>mysql -h host -u user -p mengerie
ENTER password: ********

명령어에 있는 menagerie는 패스워드가 아니라는 점을 유의한다. 명령어 라인에서 -p 옵션 다음에 패스워드를 넣기를 원하면 중간에 공간을 두지 말고 입력을 해야 한다(예를 들면 -pmypassword로 해야 하며, -p mypassword처럼 하면 안된다)하지만 패스워드를 명령어 라인에서 입력하는 것은 권장하지 않는데 다른 사람들이 사용자의 머신에서 로그인할 경우에 이 패스워드가 노출될 수 있기 때문이다. 


3.3.2 테이블 생성하기
데이터 베이스를 생성하는 것은 쉽지만 현재까지는 그 안에 아무것도 없다. SHOW TABLES을 입력하면 그것을 알 수 있다. 
mysql>SHOW TABLES;

보다 어려운 부분은 데이터베이스 구조를 어떻게 만들 것인지 결정하는 것이다. 어떤 테이블이 필요하며 그 안에 어떤 컬럼을 넣어야 하는지에 대해 결정해야 한다. 

애완 동물 각각에 대한 기록을 갖는 테이블을 원한다고 가정하자. 이것을 pet 테이블이라고 부르고 여기에는 각 동물의 이름이 들어가도록 한다. 이름 자체는 그다지 흥미로운 것은 아니기 때문에 테이블은 이름 이외의 정보를 가져야 한다. 예를 들면 사용자 가족 중에 한명 이상이 애완 동물을 기르고 있다면 각 동물의 주인을 나열하고 싶을 것이다. 또한 애완 동물의 종자 및 성별과 같은 기본적인 내용도 기록하고 싶을 것이다. 

나이는? 이것은 흥미로운 정보일지 모르겠지만, 이것을 데이터베이스에 넣는 것은 그리 좋은 일이 아니라고 생각한다. 나이는 시간이 지나면서 변하는데 이것은 자주 데이터베이스를 업데이트 해야 한다는 것을 의미한다. 대신에 생일과 같은 변하지 않는 값을 넣는 것이 더 좋다. 그 다음에는 나이를 기록하고 싶을 때마다 생일과 현재의 날짜의 차이를 계산하기만 하면 된다. MySQL은 날짜 계산식을 제공하고 있기 때문에 이것을 계산하는 것은 어려운 작업이 아니다. 나이보다는 생일을 저장하는 것이 여러 가지 다른 장점도 가지는 것이다. 

* 애완동물의 다가오는 생일을 상기 시키는 리마인더(reminder)로 이 데이터베이스를 사용할 수 있다(사용자 생각이 이런 형태의 쿼리가 다소 어리석은 것이라도 여긴다면,이번 주 또는 다음 달에 생일 선물을 보내고자 하는 고객명단을 데이터베이스에서 불러와야 할 경우를 생각하자)

* 현재의 날짜가 아닌 일수(dates)로 나이를 계산할 수 있다. 예를 들면 데이터베이스에 애완 동물이 죽은 날을 지정한다면 죽은 동물의 나이를 쉽게 계산할 수 있을 것이다. 

이 데이터베이스 테이블에 유용하게 사용될 다른 형태의 정보를 생각할 수 있겠지만 다음과 같은 것만으로도 충분하다. : name, owner, species, sex, birth, 그리고 death 

CREATE TABLE 명령문을 사용해서 테이블의 레이 아웃을 지정하도록 한다. 
mysql> CREATE TABLE pet(name VARCHAR(20), owner VARCHAR(20), species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);

VARCHAR를 name, owner 및 species 컬럼용으로 선택한 것은 잘 한 것인데 그 이유는 컬럼 값의 길이가 서로 다르기 떄문이다. 이러한 컬럼 정의에서 길이는 모두 같을 필요가 없고, 20이 될 필요도 없다. 사용자 입장에서 가장 적당하다고 생각하는 길이를 1에서 65535 사이에서 선택하기만 하면 된다. 처음에 길이를 잘못 선택하였고 나중에 보다 긴 필드가 필요하게 될 경우에는 ALTER TABLE 명령문을 사용하면 된다. 

다른 몇몇 타입들은 애완 동물의 성별을 나타내는 것으로 선택할 수 있는데, m과 f 또는 male과 female이 될 수 있다. 단일 문자 m과 f를 사용하는 것이 가장 간편한 방법이다. 

birth와 death를 위해 DATE 데이터 타입을 사용하는 것은 매우 잘한 선택이다. 

일단 테이블을 생성한 후에 SHOW TABLES를 실행하면 다음과 같은 결과가 나오게 된다. 

mysql>SHOW TABLES;

테이블이 의도한 방식으로 생성되었는지 검사하기 위해서는 DESCRIBE 명령문을 실행한다. 

mysql> DESCRIBE pet;

언제든지 DESCRIBE를 사용할 수 있는데 예를 들면 테이블에 있는 컬럼 이름 또는 그 안에 무엇이 있는지 잊었을 경우에 사용할 수 있다. 