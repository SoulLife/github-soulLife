2-1 학습 환경 설치

1. 오라클 소개
SQL을 학습하려면 DBMS를 설치하고 쿼리를 실행할 수 있는 환경을 구성해야 한다. 이 책은 오라클을 주 실습툴로 사용하므로 오라클부터 설치해 보자. 별다른 준비는 필요 없고 인터넷에 연결되어 있는 컴퓨터 한대만 있으면 설치할 수 있다. 

오라클은 1977년 래리 앨리슨(Larry Elison)이 설립한 오라클사의 DBMS이다. 최초이면서 최고의 기능과 안정성을 갖추어 줄곧 부동의 1위를 유지해 왔다. 멀티 플랫폼을 지원하고 철저한 유지보수와 고객지원 정책으로 대용량에 걸맞는 신뢰성을 갖추었다. 산업계는 물론이고 극한의 안정성을 요구하는 금융권까지 장악한 기업용 데이터베이스의 지존이다. 

그러나 무겁고 복잡해 입문자가 배우기는 부담스럽다. 제품 자체의 가격은 물론이고 막대한 유지보수 비용까지 들어 운용 비용이 만만치 않다. 무리한 가격 정책에 반감을 느끼는 기업이 많은데다 오픈소스의 강세와 클라우드의 등장으로 탈오라클 유행이 불기도 했지만 마땅한 대체제가 없는 상황이다. 

영원한 강자는 없고 오픈소스도 품질이 우수해 앞으로는 어떻게될지 알 수 없다. 그러나 오라클로 이미 구축해 놓은 데이터가 상당하고 숙련된 전문 인력이 풍부해 앞으로도 전성기를 누릴 전망이다. 시장을 완전히 선점해 버린 상황이라 종속을 벗어나기 쉽지 않다. 오라클이 발전해온 과정은 다음과 같다. 


버전			발표 시기		특징
Oracle 2.0		1979			첫 상업용 버전
Oracle 8i		1999			JVM 지원, XML 지원, i는 Internet을 의미한다.
Oracle 9i		2001			RAC(Real Application Cluster) 지원
Oracle 10g		2003			g는 여러 대의 컴퓨터를 묶은 Grid를 의미한다.
Oracle 11g		2007			엑사 데이터 지원
Oracle 12c		2013			클라우드 환경 지원, c는 Cloud를 의미한다. 
Oracle 18c		2018			명령 수동 종료, APPROX_COUNT, APPROX_SUM 함수
Oracle 19c		2019			IoT를 위한 센서 데이터 저장, JSON 타입 추가
Oracle 21c		2021 예정		블록 체인 지원, DB 내장 자바스크립트, JSON 타입 지원

버전이 올라갈 때마다 인터넷, 그리드, 클라우드에 대한 지원을 도입하여 구조와 기능을 지속적으로 발전시켜 왔다. 여러 대의 서버를 합쳐 극한의 성능과 안정성을 확보하고 빅 데이터, 인공지능, 블록체인 등의 최신 기술에도 훌륭히 대응하고 있다. 

최신 버전이 하이테크에 집중하는 동안 DBMS 기능은 큰 변화가 없어 2007년 발표한 11g 버전을 아직도 많이 사용한다. 그 이전 버전은 관심을 가질 필요가 없고 11g 이후는 안정되어 있어 어떤 버전을 사용하든 큰 차이는 없다. 이 책은 최신 버전인 19c로 실습을 진행한다. 




2. 오라클 설치
오라클은 기업용 소프트웨어 인 만큼 설치 및 관리가 까다롭고 성능 유지를 위한 튜닝은 엄청난 고급 기술에 속한다. 어지간한 DBA(관리자)를 둘 정도로 난이도가 높아 일반 개발자는 설치해 준대로 쓰기만 한다. 그러나 이 책을 읽는 사람은 대부분 입문자이므로 스스로 설치해서 쓰는 수밖에 없다. 

다행히 개인 PC에 학습용으로 설치할 때는 회원 가입만 하면 별도의 비용이 들지 않는다. 오라클 홈페이지(https://www.oracle.com)에 접속해 보자. 디자인은 늘상 바뀌지만 구조는 크게 바뀌지 않는다. 상단 메뉴의 [Products]를 클릭하고 [Oracle Database]메뉴로 들어간다. 

이 책을 읽는 시점에 메뉴 구조가 바뀌었다면 상단 검색창에 Oracle 19c download 을 직접 입력하여 링크를 찾는 것이 더 빠르다. 최신 버전에 대한 안내와 자기 자랑을 잔뜩 늘어 놓았으며 중간쯤에 제품에 대한 다운로드 버튼과 자습서를 제공한다

왼쪽의 Download 버튼을 클릭하면 버전별로 운영체제별로 정리해 놓은 목록이 나타난다. 현재 19.3 이 최신이지만 장래에는 더 높은 버전이 발표될 것이다. 현업에서 많이 사용하는 11g나 12c도 무난하지만 책과 보조를 맞추려면 19.3 버전을 받는 것이 이상적이다. 

윈도우 환경에서 실습할 때는 제일 위의 윈도우 64비트 버전을 받으면 된다. 정품에서 일부 고급 기능을 제외하고 상업적으로 쓸 수 없지만 학습용으로는 부족하지 않다. 링크를 클릭하면 로그인을 요구한다. 이렇게 비싼 제품을 공짜로 제공하니 최소한 누가 사용하는지 관리하겠다는 뜻이다. 

2.9GB 크기의 WINDOWS.X64_193000_db_home.zip 파일 안에 설치 프로그램이 들어있다. 압축을 푼후 setup.exe를 실행하면 설치를 시작한다. 단계별로 옵션을 선택하는 마법사 형식이다. 웬만하면 디폴트 옵션을 받아들이고 꼭 필요한 옵션만 변경하면 된다. 

제일 먼저 구성 옵션을 묻는다. 디폴트로 선택된 단일 인스턴스는 오라클 설치 후 데이터 베이스를 자동으로 생성하여 바로 쓸수 있도록 해준다. 학습용으로 가장 간편한 유형이다. 디폴트를 선택하고 [다음] 버튼을 누르면 계속 질문을 한다. 

시스템 클래스는 데스크톱이 선택되어 있다. 서버 클래스가 기능은 더 많지만 학습용으로는 너무 복잡하다. Oracle 홈 사용자 페이지에서는 단일 인스턴스에 무난한 가상 계정을 선택한다. 여기까지는 모두 디폴트를 받아들이면 된다. 다음 페이지인 기본 설치에서는 이것 저것 선택할 것이 많다.


Oracle Base에 설치 경로를 지정한다. 공백이 포함된 Program Files는 바람직하지 않으며 한글이 들어간 경로도 말썽이 많아 피하는 것이 좋다. 여기서는 C:\Oracle 폴더를 선택했는데 상황에 따라 다른 드라이브에 설치해도 상관없다. 

전역 데이터베이스 이름은 설치 후 자동으로 만들 DB 이름이다. 디폴트는 orcl로 되어 있는데 학습을 위해 설치하는 것이므로 Study로 변경하자 비밀 번호는 짧게 asdf로 지정한다 위험하다는 경고가 나타나며 실제 서버에서는 복잡하게 지정해야 하지만 학습용이므로 기억하기 쉬운 것이 좋다. 

설치 위치, DB명, 비밀번호까지 입력한 후 [다음] 버튼을 누르면 요약 정보를 보여준 후 설치를 진행한다. 시간이 꽤 오래 걸리는데 차분히 기다리면 설치 완료 메시지가 나타난다. [시작] 메뉴에서 기본 쿼리툴인 SQL Plus를 실행해 보자. 


사용자명에 SYSTEM을 입력하고 비밀번호 asdf를 입력하면 SQL> 프롬포트가 나타나 명령을 받을 준비를 한다. 이 상태에서 SQL 명령으로 테이블을 만들고 레코드를 삽입하며 모든 조작을 다할수 있다. 다음 명령으로 오늘 날짜를 출력해 보자. 

SQL>SELECT sysdate FROM dual;

쿼리창에 날짜가 출력되고 SQL> 프롬프트가 다시 나타난다. 도스창처럼 명령을 내리면 즉시 응답하는 대화식이다. 기본툴 치고는 보기보다 기능이 많지만 학습용으로는 불편하니 구경만 해보자. exit 명령으로 종료한다. 



3. SQL Developer

DBMS는 백그라운드에서 데이터 관리만 전담하는 서버 프로그램이며 사용자가 직접 사용하는 것은 아니다. 심지어 눈에 보이지도 않아 서버만으로는 아무것도 할 수 없다. 그래서 DBMS를 제어하는 별도의 관리 프로그램이 필요하다. 

오라클의 공식 쿼리툴은 SQL Seveloper이다. 쿼리툴은 DBMS 제품과는 별개이며 취향에 따라 선택하는 것이어서 오라클과 함께 설치되지 않는다. 오라클 홈페이지의 검색창에서 SQL developer로 검색하면 금방 찾을수 있다. 2020년 9월 최신 버전은 20.2이며 버전에 따른 기능 차이가 별로 없어 더 최신 버전을 받아도 무방하다. 

극강의 성능을 요구하는 DBMS는 C언어로 제작하지만 UI가 많은 쿼리툴은 주로 자바로 만들며 JDK가 있어야 동작한다. 자바 실행 환경을 따로 구성하는 것은 번거로우므로 JDK가 포함된 버전을 받는 것이 편리하다. 로그인만 하면 누구에게나 무료이다. 

설치할 필요 없이 압축만 풀면 바로 실행할수 있다. C:\Oracle 아래에 압축을 풀어 두고 실행 파일인 sqldeveloper.exe의 바로가기를 등록해 두자. 최초 실행시 접속 대상 서버를 등록한다 왼쪽 위 초록색 (+) 버튼을 클릭하여 접속할 서버를 등록한다. 

접속명은 서버간의 구분을 위해 붙이는 임의의 이름인데 Study로 입력하자. 사용자 이름에 는 SYSTEM을 입력하고 비밀번호는 설치시에 지정했던 asdf를 입력한다. 매번 비밀번호를 입력하기 번거로우니 비밀번호 저장 체크 박스를 선택해 둔다. 세부정보의 SID에 Study를 입력한다. 

[테스트] 버튼을 눌러 서버에 접속해 보자. 로컬 서버이니 오타가 없는 한 잘 접속되며 아래쪽 상태란에 성공이라고 표시한다 [저장] 버튼을 누르면 메인 윈도우의 접속 목록에 Study DB가 나타난다. 이 노드를 펼치면 DB 오브젝트가 종류별로 나열되는데 골격만 갖추었을 뿐 내부는 텅텅 비어있다. 

SQL Developer는 메뉴, 툴바, 상태란 등으로 구성된 평범한 윈도우이다. 왼쪽 접속창에는 접속한 서버와 DB 개체가 계층적으로 표시되는데 현재는 로컬 DB 서버 하나밖에 없다. 중앙의 워크시트에 쿼리 명령을 입력하면 아래쪽에 실행 결과를 보여준다. 

워크시트는 선택스 컬러링, 자동 완성 등의 기능을 제공하며 각 창의 도킹 상태는 임의로 조정할 수 있다. 메뉴의 [도구] > [환경설정] 에서 취향에 맞게 옵션을 선택할 수 있지만 디폴트가 무난해서 꼭 조정할 필요는 없다. [코드편집기] > [글꼴]에서 폰트 정도만 시원스럽게 조정하면 된다. 